{"version":3,"file":"static/js/453.c8c3528e.chunk.js","mappings":"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","sources":["components/pages/feedbacks.jsx","components/utils/status.jsx","components/utils/error-handling.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Container, Form, FormGroup } from \"react-bootstrap\";\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\nimport { EmojiRating } from \"emoji-rating-component\";\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS } from \"../utils/strings\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport api from \"../utils/api\";\r\nimport { GET_USER_NAME } from \"../utils/decode-jwt-user\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n//\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\n\r\n// export feedbacks\r\nexport default function FeedBack() {\r\n  // refs\r\n  const cNameRef = React.useRef();\r\n  const serviceCommentryRef = React.useRef();\r\n  const websiteCommentryRef = React.useRef();\r\n\r\n  //variables\r\n  const subtitleFS = 14 / 16;\r\n  //\r\n  const [disableCustomerName, setDisableCustomerName] = React.useState(false);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [validated, setValidated] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // ratings\r\n  const [serviceRating, setServiceRating] = React.useState(5);\r\n  const [websiteRating, setWebsiteRating] = React.useState(5);\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // rating\r\n  const submitFeedBack = async (payload) => {\r\n    //setNotification\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Submiting ...\", \"\");\r\n\r\n    // urls\r\n    const url = \"feedbacks/api/post/feedback/\";\r\n    await api\r\n      .post(url, payload)\r\n      .then(async (r) => {\r\n        // check status\r\n        if (r.status === 200) {\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", r.data.msg);\r\n          await AwaitCallBack(\r\n            () => (window.location.href = ROUTE_LINKS.home),\r\n            2000\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        ErrorHandling(e, setNotification);\r\n      });\r\n  };\r\n  // function\r\n  const handleSubmit = async (event) => {\r\n    //\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n\r\n    // payload\r\n    const payload = {\r\n      customer_id: `${cNameRef.current.value}`,\r\n      service_commentry: `${serviceCommentryRef.current.value}`.toLowerCase(),\r\n      website_commentry: `${websiteCommentryRef.current.value}`.toLowerCase(),\r\n      service_rating: serviceRating,\r\n      website_rating: websiteRating,\r\n    };\r\n    submitFeedBack(payload);\r\n  };\r\n  // react state to scroll\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0); // scroll to top\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [notificationType]);\r\n\r\n  React.useEffect(() => {\r\n    // verify that customer logged in\r\n    const [isLoggedin, decodedInfo] = GET_USER_NAME();\r\n    if (isLoggedin) {\r\n      // customer name\r\n      const fullName =\r\n        `${decodedInfo.f_name}`.toUpperCase().charAt(0) +\r\n        `${decodedInfo.f_name}`.toLowerCase().slice(1);\r\n\r\n      const surname =\r\n        `${decodedInfo.s_name}`.toUpperCase().charAt(0) +\r\n        `${decodedInfo.s_name}`.toLocaleLowerCase().slice(1);\r\n\r\n      // complete name\r\n      const completeName = `${fullName} ${surname}`;\r\n      // set customer name and disable the username field\r\n      setDisableCustomerName((_) => isLoggedin);\r\n      cNameRef.current.value = completeName;\r\n    } else {\r\n      setDisableCustomerName((_) => false);\r\n    }\r\n  }, []);\r\n\r\n  // return section\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0\">\r\n          <Card.Header\r\n            as=\"h3\"\r\n            className=\"text-center py-2 bg-transparent border-0\"\r\n            style={{ fontWeight: \"900\" }}\r\n          >\r\n            Feed Back\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {/* Subtitle */}\r\n            <Card.Subtitle\r\n              className=\"mb-4\"\r\n              style={{ fontSize: `${subtitleFS}rem` }}\r\n            >\r\n              Dear valued customer, thank you for taking this quick but valuble\r\n              questionair, please answer the questions below, when finished\r\n              click submit.\r\n            </Card.Subtitle>\r\n            {/* Subtitle */}\r\n            {/*NOTIFICATIONS*/}\r\n            {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n            {/*NOTIFICATIONS*/}\r\n\r\n            {/*Feed Back Form*/}\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              {/* Customer Name */}\r\n              <FormGroup className=\"my-3\">\r\n                <Form.FloatingLabel\r\n                  label=\"Full name\"\r\n                  className=\"fw-bold\"\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"rounded-0 fw-bold\"\r\n                    placeholder=\"Freddy Smith\"\r\n                    disabled={disableCustomerName || disableUI}\r\n                    required={!disableCustomerName}\r\n                    ref={cNameRef}\r\n                    type=\"text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter your full name.\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </FormGroup>\r\n              {/* Customer Name */}\r\n              {/* Service Rating */}\r\n              <FormGroup className=\"my-4\">\r\n                <div className=\"mb-2 d-flex flex-column\">\r\n                  <div className=\"mb-2\">\r\n                    <span className=\"fw-bold\">Service rating </span>\r\n                    <span>{serviceRating}</span>\r\n                  </div>\r\n                  <EmojiRating\r\n                    selected={serviceRating}\r\n                    onSelected={\r\n                      disableUI\r\n                        ? (__) => {}\r\n                        : (selected) => setServiceRating((prev) => selected)\r\n                    }\r\n                    iconSize={30}\r\n                  />\r\n                </div>\r\n                <Form.FloatingLabel\r\n                  label=\"Comment on our services\"\r\n                  className=\"fw-bold\"\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"rounded-0 fw-bold\"\r\n                    placeholder=\"Perfect service, best ive ever had\"\r\n                    disabled={disableUI}\r\n                    required={true}\r\n                    ref={serviceCommentryRef}\r\n                    type=\"text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please share your thoughts with us.\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </FormGroup>\r\n              {/* Service Rating */}\r\n              {/* Website Rating */}\r\n              <FormGroup className=\"my-4\">\r\n                <div className=\"mb-2 d-flex flex-column\">\r\n                  <div className=\"mb-2\">\r\n                    <span className=\"fw-bold\">Website rating </span>\r\n                    <span>{websiteRating}</span>\r\n                  </div>\r\n                  <EmojiRating\r\n                    selected={websiteRating}\r\n                    onSelected={\r\n                      disableUI\r\n                        ? (__) => {}\r\n                        : (selected) => setWebsiteRating((prev) => selected)\r\n                    }\r\n                    iconSize={30}\r\n                  />\r\n                </div>\r\n                <Form.FloatingLabel\r\n                  label=\"Comment on our website\"\r\n                  className=\"fw-bold\"\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"rounded-0 fw-bold\"\r\n                    placeholder=\"Awesome website\"\r\n                    disabled={disableUI}\r\n                    required={true}\r\n                    ref={websiteCommentryRef}\r\n                    type=\"text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please share your thoughts with us.\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </FormGroup>\r\n              {/* Website Rating */}\r\n              <div className=\"w-100 d-flex justify-content-end align-items-center\">\r\n                <Button\r\n                  disabled={disableUI}\r\n                  variant=\"outline-primary\"\r\n                  className=\"border-0 rounded-0 fw-bold\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {/*Feed Back Form*/}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      <VerticalSpacer height={`${window.innerHeight / 2}px`} />\r\n    </motion.section>\r\n  );\r\n}\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n"],"names":["FeedBack","cNameRef","React","serviceCommentryRef","websiteCommentryRef","disableCustomerName","setDisableCustomerName","disableUI","setDisableUI","validated","setValidated","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","serviceRating","setServiceRating","websiteRating","setWebsiteRating","setNotification","type","leading","trailing","_","disable","window","scrollTo","isLoggedin","decodedInfo","GET_USER_NAME","fullName","concat","f_name","toUpperCase","charAt","toLowerCase","slice","surname","s_name","toLocaleLowerCase","completeName","current","value","_jsxs","motion","className","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","children","_jsx","Container","Card","as","style","fontWeight","fontSize","NOTIFICATIONS","Form","noValidate","onSubmit","async","event","currentTarget","checkValidity","preventDefault","stopPropagation","api","payload","then","r","status","data","msg","AwaitCallBack","location","href","ROUTE_LINKS","catch","e","ErrorHandling","submitFeedBack","customer_id","service_commentry","website_commentry","service_rating","website_rating","FormGroup","label","color","placeholder","disabled","required","ref","EmojiRating","selected","onSelected","__","prev","iconSize","Button","variant","VerticalSpacer","height","innerHeight","STATUS","response","statuscode","detail","email","request","message"],"sourceRoot":""}