{"version":3,"file":"static/js/350.b945ffab.chunk.js","mappings":"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","sources":["components/modals/edit-vehicle-size-modal.jsx","components/modals/edit-routes-modal.jsx","components/modals/edit-additional-info-modal.jsx","components/pages/update-job.jsx","components/sub-components/divider.jsx","components/sub-components/quote-invoice-slip.jsx","components/utils/contexts.jsx","components/utils/status.jsx","components/utils/error-handling.jsx","components/utils/formats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Carousel, Form, Modal } from \"react-bootstrap\";\r\nimport { NOTIFICATION_TYPE, VEHICLE_TYPE } from \"../utils/strings\";\r\nimport { UPDATE_JOB_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\nimport { ROUTE_LINKS } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\nimport { AnimatedButton } from \"../sub-components/animated-button\";\r\n\r\n// export\r\nexport function EDIT_VEHICLE_SIZE_MODAL() {\r\n  // context\r\n  const context = React.useContext(UPDATE_JOB_CONTEXT);\r\n  // navigate\r\n  const navigate = useNavigate();\r\n\r\n  // ref\r\n  const modalRef = React.useRef();\r\n\r\n  // React Hook useState\r\n  const [selectedVehicle, setSelectedVehicle] = React.useState(0);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // updateVehicle SIze\r\n  const updateVSize = async () => {\r\n    // check if logged in\r\n    const [verify, __] = IS_LOGGED_IN();\r\n    //\r\n    if (verify) {\r\n      // set notification\r\n      modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n\r\n      // const\r\n      const url = `jobs/api/job/update/${context.job.id}/`;\r\n      await api\r\n        .patch(url, {\r\n          vehicle_size: VEHICLE_TYPE[selectedVehicle].size.toFixed(1),\r\n        })\r\n        .then(async (r) => {\r\n          //\r\n          const msg = \"Vehicle size updated successfully\";\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", msg);\r\n\r\n          // then wait for 3 seconds\r\n          const updateUrl = `/jobs/job/${context.job.id}/update`;\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          await AwaitCallBack(() => (window.location.href = updateUrl), 2000);\r\n        })\r\n        .catch((e) => {\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n\r\n      return;\r\n    }\r\n\r\n    // otherwise\r\n    // otherwise\r\n    const message =\r\n      \"To view this section you must be signed in. we'll navigate you to the sign-in page.\";\r\n    setNotification(NOTIFICATION_TYPE.info, \"Dear valued customer. \", message);\r\n    // pause\r\n    await AwaitCallBack(() => {\r\n      context.setShow((_) => false);\r\n      navigate(ROUTE_LINKS.signin);\r\n    }, 6000);\r\n  };\r\n\r\n  //\r\n  // vsize\r\n  const vSize = (vsize) => {\r\n    //find\r\n    const index = VEHICLE_TYPE.findIndex((item) => {\r\n      return item.size === vsize.size;\r\n    });\r\n    // return\r\n    return index;\r\n  };\r\n\r\n  // function\r\n  const VChecked = (selected, vSize) =>\r\n    VEHICLE_TYPE[selected].size === vSize.size;\r\n  //\r\n  React.useEffect(() => {\r\n    setSelectedVehicle((_) =>\r\n      VEHICLE_TYPE.findIndex((item) => {\r\n        return item.size === context.job.vehicle_size;\r\n      })\r\n    );\r\n  }, [context]);\r\n\r\n  //\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0\"\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n            }\r\n      }\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          Edit vehicle size\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*Carousel*/}\r\n        <Carousel\r\n          activeIndex={selectedVehicle}\r\n          controls={false}\r\n          indicators={false}\r\n        >\r\n          {VEHICLE_TYPE.map((v, i) => {\r\n            //return\r\n            return (\r\n              <Carousel.Item className=\"px-4 pt-2\" key={i}>\r\n                <div className=\"w-100 d-flex justify-content-center align-items-center\">\r\n                  <img className=\"d-block w-75\" src={v.img} alt={`${v.size}`} />\r\n                </div>\r\n              </Carousel.Item>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        {/*Carousel*/}\r\n        {/*Buttons*/}\r\n        <div className=\"py-3 d-flex flex-column justify-content-start align-items-start gap-2\">\r\n          {VEHICLE_TYPE.map((vsize, i) => {\r\n            return (\r\n              <AnimatedButton key={i} className=\"p-1\">\r\n                <Form.Group\r\n                  id={`Group-${i}`}\r\n                  className=\"border border-0 border-end border-3 pe-1\"\r\n                >\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    disabled={disableUI}\r\n                    value={vsize.size}\r\n                    checked={VChecked(selectedVehicle, vsize)}\r\n                    onClick={(e) => setSelectedVehicle((_) => vSize(vsize))}\r\n                  >\r\n                    <Form.Check.Label\r\n                      style={{\r\n                        fontSize: `${14 / 16}rem`,\r\n                        fontWeight: VChecked(selectedVehicle, vsize) ? 600 : \"\",\r\n                      }}\r\n                      onClick={() => setSelectedVehicle((_) => vSize(vsize))}\r\n                    >\r\n                      <span\r\n                        className={`text-${\r\n                          VChecked(selectedVehicle, vsize) ? \"primary\" : \"dark\"\r\n                        }`}\r\n                        style={{ fontWeight: \"900\" }}\r\n                      >\r\n                        {vsize.size} Ton\r\n                      </span>{\" \"}\r\n                      {vsize.description}\r\n                    </Form.Check.Label>\r\n                    <Form.Check.Input\r\n                      type=\"checkbox\"\r\n                      value={vsize.size}\r\n                      disabled={disableUI}\r\n                      onChange={(e) => {}}\r\n                      onClick={(e) => setSelectedVehicle((_) => vSize(vsize))}\r\n                      checked={VChecked(selectedVehicle, vsize)}\r\n                    />\r\n                  </Form.Check>\r\n                </Form.Group>\r\n              </AnimatedButton>\r\n            );\r\n          })}\r\n          {/*Buttons*/}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0 m-0\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          className=\"border-0 rounded-0 fw-bold\"\r\n          disabled={disableUI}\r\n          onClick={async () => await updateVSize()}\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router\";\r\nimport usePlacesService from \"react-google-autocomplete/lib/usePlacesAutocompleteService\";\r\n\r\n// contexts\r\nimport { UPDATE_JOB_CONTEXT } from \"../utils/contexts\";\r\n\r\n// icons\r\nimport { HiLocationMarker } from \"react-icons/hi\";\r\nimport { MdEditLocationAlt } from \"react-icons/md\";\r\n\r\n// util\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { GOOGLE_API_KEY, NOTIFICATION_TYPE } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\nimport { ROUTE_LINKS } from \"../utils/strings\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// export modal\r\nexport function EDIT_ROUTES_MODAL() {\r\n  //useRef\r\n  const searchRouteRef = React.useRef();\r\n  //\r\n  const context = React.useContext(UPDATE_JOB_CONTEXT);\r\n\r\n  // navigate\r\n  const navigate = useNavigate();\r\n  // routes React usestate hook\r\n  const [pickedRoutes, setPickedRoutes] = React.useState([]);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  //\r\n  const {\r\n    placesService,\r\n    placePredictions,\r\n    getPlacePredictions,\r\n    isPlacePredictionsLoading,\r\n  } = usePlacesService({\r\n    apiKey: GOOGLE_API_KEY,\r\n    debounce: 100,\r\n    options: {\r\n      componentRestrictions: { country: \"za\" },\r\n    },\r\n  });\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // function to determin\r\n  const pickupDropOff = (list, current) => {\r\n    if (current <= 0) {\r\n      return \"Pickup\";\r\n    } else if (current > 0 && current < list.length - 1) {\r\n      return \"Pickup|Dropoff\";\r\n    }\r\n    //\r\n    return \"Dropoff\";\r\n  };\r\n  // function generate distance\r\n  const generateDistance = async (routeList) => {\r\n    //\r\n    // set notification\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n\r\n    // set url\r\n    const url = \"jobs/api/compute-distance/\";\r\n    await api\r\n      .post(url, { routes: routeList })\r\n      .then(async (r) => {\r\n        // check the status\r\n        if (r.status === 200) {\r\n          //\r\n          setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n\r\n          // set response Data\r\n          const responseData = {\r\n            routes: routeList,\r\n            distance: r.data.distance,\r\n          };\r\n\r\n          // update\r\n          await updateJobRoutes(responseData);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        ErrorHandling(e, setNotification);\r\n      });\r\n  };\r\n\r\n  const Routes = ({ routes }) => {\r\n    // evaluate\r\n    if (routes.length > 0) {\r\n      return (\r\n        <div className=\"mt-3\">\r\n          <table className=\"table table-bordered table-striped table-dark m-0\">\r\n            {/*head*/}\r\n            {routes.length > 0 ? (\r\n              <thead>\r\n                <tr>\r\n                  <th>Routes</th>\r\n                </tr>\r\n              </thead>\r\n            ) : null}\r\n            {/*head*/}\r\n            {/*tbody*/}\r\n            <tbody>\r\n              {routes.map((route, index) => {\r\n                return (\r\n                  <tr key={`route-${index}`}>\r\n                    <td>\r\n                      <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                        <div className=\"d-flex flex-column\">\r\n                          <span className=\"form-text fw-bold text-warning\">\r\n                            {index + 1} - {pickupDropOff(routes, index)}\r\n                          </span>\r\n                          <span style={{ fontSize: `${14 / 16}rem` }}>\r\n                            {route.route_name}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"ms-2\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn-close btn-close-white\"\r\n                            aria-label=\"Close\"\r\n                            onClick={\r\n                              disableUI\r\n                                ? null\r\n                                : () => {\r\n                                    const newRouteList = pickedRoutes.filter(\r\n                                      function (item) {\r\n                                        return item !== route;\r\n                                      }\r\n                                    );\r\n                                    setPickedRoutes((_) => [...newRouteList]);\r\n                                  }\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            {/*tbody*/}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // when search route is clicked\r\n  const getRouteAddress = (place) => {\r\n    placesService?.getDetails(\r\n      {\r\n        placeId: place.place_id,\r\n      },\r\n      (placeDetails) => {\r\n        const loc = {\r\n          route_name: `${place.structured_formatting.main_text} ${place.structured_formatting.secondary_text}`,\r\n          lat: placeDetails.geometry.location.lat(),\r\n          lng: placeDetails.geometry.location.lng(),\r\n        };\r\n        setPickedRoutes((_) => [...pickedRoutes, loc]);\r\n        getPlacePredictions({ input: \"\" });\r\n        searchRouteRef.current.value = \"\";\r\n      }\r\n    );\r\n  };\r\n\r\n  // These are seach items\r\n  // these items will show on the search list\r\n  const seachListItem = (searchList) => {\r\n    //\r\n    if (searchList.length > 0) {\r\n      return searchList.map((route, index) => {\r\n        return (\r\n          <li\r\n            key={index}\r\n            className=\"btn btn-light border-0 w-100 rounded-0 text-dark d-flex flex-row justify-content-start align-items-start text-start gap-2\"\r\n            onClick={() => getRouteAddress(route)}\r\n          >\r\n            <div className=\"p-0 m-0\">\r\n              <HiLocationMarker color=\"red\" />\r\n            </div>\r\n            <span style={{ fontSize: `${14 / 16}rem` }}>\r\n              <strong>{route.structured_formatting.main_text}</strong>{\" \"}\r\n              {route.structured_formatting.secondary_text}\r\n            </span>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  // thi will be displayed when loading search routes\r\n  const searchSuggestions = (isloading) => {\r\n    if (isloading) {\r\n      return (\r\n        <div className=\"w-100 p-2 d-flex flex-row justify-content-center align-items-center\">\r\n          <div className=\"spinner-border text-secondary\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (placePredictions.length > 0) {\r\n      return seachListItem(placePredictions);\r\n    }\r\n    return;\r\n  };\r\n\r\n  // function to update\r\n  const updateJobRoutes = async (payload) => {\r\n    // verify if logged in\r\n    const [verify, tokens] = IS_LOGGED_IN();\r\n    if (verify) {\r\n      // set loading\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n      //set config\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${tokens.access}`,\r\n        },\r\n      };\r\n\r\n      // set url\r\n      const url = `jobs/api/job/update/${context.job.id}/`;\r\n      await api\r\n        .patch(url, payload, config)\r\n        .then(async (r) => {\r\n          setNotification(\r\n            NOTIFICATION_TYPE.success,\r\n            \"Awesome.\",\r\n            \"Routes successfully updated\"\r\n          );\r\n          // then wait for 3 seconds\r\n          const updateUrl = `/jobs/job/${context.job.id}/update`;\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          await AwaitCallBack(() => (window.location.href = updateUrl), 2000);\r\n        })\r\n        .catch((e) => {\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n      return;\r\n    }\r\n    //\r\n    // otherwise\r\n    const message =\r\n      \"To view this section you must be signed in. we'll navigate you to the sign-in page.\";\r\n    setNotification(NOTIFICATION_TYPE.info, \"Dear valued customer. \", message);\r\n    // sleep\r\n    await AwaitCallBack(() => {\r\n      context.setShow((_) => false);\r\n      navigate(ROUTE_LINKS.signin);\r\n    }, 6000);\r\n  };\r\n\r\n  //\r\n  React.useEffect(() => {\r\n    setPickedRoutes((_) => [...context.job.routes]);\r\n  }, [context]);\r\n  //\r\n  return (\r\n    <Modal\r\n      contentClassName=\"rounded-0\"\r\n      centered={true}\r\n      show={context.show}\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              context.setShow((_) => false);\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n            }\r\n      }\r\n    >\r\n      <Modal.Header\r\n        closeButton={true}\r\n        // closeVariant=\"dark\"\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>Edit routes</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*List Items*/}\r\n        <Routes routes={pickedRoutes} />\r\n        {/*List Items*/}\r\n        {/*Search*/}\r\n        <Form.Group className={`position-relative mt-3`}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              className=\"fw-bold rounded-0 border-end-0\"\r\n              placeholder=\"Search\"\r\n              ref={searchRouteRef}\r\n              disabled={disableUI}\r\n              onChange={(e) => getPlacePredictions({ input: e.target.value })}\r\n            />\r\n            <InputGroup.Text className=\"bg-white rounded-0\">\r\n              <MdEditLocationAlt color=\"red\" />\r\n            </InputGroup.Text>\r\n          </InputGroup>\r\n          <ul\r\n            className=\"dropdown__shadow mt-2 p-0 shadow-sm w-100 position-absolute bg-white d-flex flex-column justify-content-center align-items-center gap-1\"\r\n            style={{\r\n              listStyle: \"none\",\r\n              zIndex: \"999\",\r\n            }}\r\n          >\r\n            {searchSuggestions(isPlacePredictionsLoading)}\r\n          </ul>\r\n        </Form.Group>\r\n        {/*Search*/}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0\">\r\n        <Button\r\n          disabled={disableUI}\r\n          variant=\"outline-primary\"\r\n          className=\"border-0 rounded-0 fw-bold\"\r\n          onClick={async () => await generateDistance(pickedRoutes)}\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Button, Dropdown, Form, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n// utils\r\nimport {\r\n  DATETIME_ERROR_MESSAGE,\r\n  NOTIFICATION_TYPE,\r\n  SHUTTLE_SERVICE,\r\n  VEHICLE_TYPE,\r\n} from \"../utils/strings\";\r\nimport { UPDATE_JOB_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\nimport { ROUTE_LINKS } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n//\r\nimport \"./date_time.css\";\r\n//\r\n// export\r\nexport function EDIT_ADDITIONAL_INFO_MODAL() {\r\n  // context\r\n  const context = React.useContext(UPDATE_JOB_CONTEXT);\r\n  // navigate\r\n  const navigate = useNavigate();\r\n\r\n  // ref\r\n  const driverNoteRef = React.useRef();\r\n  const modalRef = React.useRef();\r\n  //\r\n  const [startDateTime, setStartDateTime] = React.useState(new Date());\r\n  const [additionalHelpers, setAdditionalHelpers] = React.useState(1);\r\n  const [floorsToCarry, setFloorsToCarry] = React.useState(0);\r\n  const [shuttle, setShuttle] = React.useState(0);\r\n  const [disableShuttling, setDisableShuttling] = React.useState(false);\r\n  const [paymentOption, setPaymentOption] = React.useState(\"CASH\");\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  //\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n  const [dateBorderColor, setDateBorderColor] =\r\n    React.useState(\"border-0 text-dark\");\r\n  // const\r\n  const addHelpers = Array(3).fill(0);\r\n  const carryFloors = Array(11).fill(0);\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disableUserInterface =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI(() => disableUserInterface);\r\n  };\r\n\r\n  //\r\n  const plurify = (value, singular, plural) => {\r\n    if (value > 1) return `${value} ${plural}`;\r\n    return `${value} ${singular}`;\r\n  };\r\n  //\r\n  // validate Date\r\n  const validateDateTime = async (dateTime) => {\r\n    // scroll\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    //Desired time\r\n    const desiredTime = (1 * 60 + 30) * 60 * 1000;\r\n    // validate\r\n    const verify = dateTime - Date.now() < desiredTime;\r\n\r\n    // raise and erro\r\n    if (verify) {\r\n      const msg = `${DATETIME_ERROR_MESSAGE}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops! error. \", msg);\r\n      setDateBorderColor((_) => \"border border-danger border-1 text-danger\");\r\n      return;\r\n    }\r\n\r\n    setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n    setDateBorderColor((_) => \"border-0 text-dark\");\r\n\r\n    // resolve date time values\r\n    const dateYear = startDateTime.getFullYear();\r\n    const dateMonth = startDateTime.getMonth() + 1;\r\n    const dateDay = startDateTime.getDate();\r\n    const timeHour = startDateTime.getHours();\r\n    const timeMinute = startDateTime.getMinutes();\r\n    const timeSeconds = startDateTime.getSeconds();\r\n\r\n    // otherwise everything is good\r\n    const jobDate = `${dateYear}-${dateMonth}-${dateDay}`;\r\n    const jobTime = `${timeHour}:${timeMinute}:${timeSeconds}`;\r\n\r\n    //\r\n    await updateAdditionalInfo({\r\n      job_date: jobDate,\r\n      job_time: jobTime,\r\n      helpers: additionalHelpers,\r\n      floors: floorsToCarry,\r\n      shuttle: shuttle,\r\n      payment_option: paymentOption,\r\n      driver_note: driverNoteRef.current.value,\r\n    });\r\n  };\r\n\r\n  // updateVehicle SIze\r\n  const updateAdditionalInfo = async (payload) => {\r\n    // check if logged in\r\n    const [verify, __] = IS_LOGGED_IN();\r\n    if (verify) {\r\n      // set notification\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n      // const\r\n      const url = `jobs/api/job/update/${context.job.id}/`;\r\n      await api\r\n        .patch(url, payload)\r\n        .then(async (r) => {\r\n          if (r.status === 200) {\r\n            // notification\r\n            const msg = \"Update success\";\r\n            const leadMsg = \"Awesome.\";\r\n            setNotification(NOTIFICATION_TYPE.success, leadMsg, msg);\r\n            //\r\n            await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n            await AwaitCallBack(() => {\r\n              const updateUrl = `/jobs/job/${context.job.id}/update`;\r\n              window.location.href = updateUrl;\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => ErrorHandling(e, setNotification));\r\n\r\n      return;\r\n    }\r\n\r\n    // otherwise\r\n    const message =\r\n      \"To view this section you must be signed in. we'll navigate you to the sign-in page.\";\r\n    setNotification(NOTIFICATION_TYPE.info, \"Dear valued customer. \", message);\r\n    // sleep\r\n    await AwaitCallBack(() => {\r\n      context.setShow((_) => false);\r\n      navigate(ROUTE_LINKS.signin);\r\n    }, 6000);\r\n  };\r\n\r\n  // disable shuttling\r\n  const verifyDisabledShuttlingField = (vType, sType) => {\r\n    if (vType <= VEHICLE_TYPE[1].size) {\r\n      setDisableShuttling((_) => true);\r\n      setShuttle((_) => 0);\r\n      return;\r\n    }\r\n    // otherwise enable it\r\n    setDisableShuttling((_) => false);\r\n    setShuttle((_) => sType);\r\n  };\r\n\r\n  // const set variables\r\n  const setValues = async (e) => {\r\n    driverNoteRef.current.value = context.job.driver_note;\r\n    setFloorsToCarry((_) => context.job.floors);\r\n    setAdditionalHelpers((_) => context.job.helpers);\r\n    verifyDisabledShuttlingField(context.job.vehicle_size, context.job.shuttle);\r\n    setPaymentOption(context.job.payment_option);\r\n    setStartDateTime(\r\n      new Date(`${context.job.job_date} ${context.job.job_time}`)\r\n    );\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0\"\r\n      onEntered={setValues}\r\n      onHide={() => {\r\n        context.setShow((_) => false);\r\n        setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n        setDateBorderColor((_) => \"border-0 text-dark\");\r\n      }}\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        // closeVariant=\"dark\"\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          Edit additional information\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*Choose Date Time */}\r\n        <Form.Group\r\n          className={`position-relative mb-3 mt-${\r\n            notificationType === NOTIFICATION_TYPE.none ? \"0\" : \"3\"\r\n          }`}\r\n        >\r\n          <DatePicker\r\n            disabled={disableUI}\r\n            startDate={startDateTime}\r\n            minDate={Date.now()}\r\n            className={`form-control w-auto py-1 rounded-0 border-0 bg-white fw-bold text-start border-primary date__time`}\r\n            dateFormat=\"yyyy-MMM-dd HH:mm\"\r\n            timeFormat=\"HH:mm\"\r\n            selected={startDateTime}\r\n            calendarClassName=\"rounded-0 w-100 d-flex flex-row\"\r\n            showTimeSelect={true}\r\n            showPopperArrow={false}\r\n            onFocus={(e) => (e.target.readOnly = true)}\r\n            onChange={(dateTime) => {\r\n              setStartDateTime((_) => dateTime);\r\n            }}\r\n          />\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>Job date and time</Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Choose Date Time */}\r\n        {/*Additional information*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              variant=\"outline-light\"\r\n              className=\"rounded-0 py-1 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n              disabled={disableUI}\r\n            >\r\n              Additional helpers : {additionalHelpers}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {addHelpers.map((_, value) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    className=\"fw-bold\"\r\n                    key={value + 1}\r\n                    id={addHelpers.length - value}\r\n                    onClick={(e) =>\r\n                      setAdditionalHelpers((_) => Number(e.currentTarget.id))\r\n                    }\r\n                  >\r\n                    {plurify(addHelpers.length - value, \"Helper\", \"Helpers\")}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              Driver + {plurify(additionalHelpers, \"helper\", \"helpers\")}\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Additional information*/}\r\n        {/*Carry Floors*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              variant=\"outline-light\"\r\n              className=\"rounded-0 py-1 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n              disabled={disableUI}\r\n            >\r\n              Floors to carry : {floorsToCarry}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {carryFloors.map((_, value) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    className=\"fw-bold\"\r\n                    key={value}\r\n                    id={carryFloors.length - 1 - value}\r\n                    onClick={(e) =>\r\n                      setFloorsToCarry((_) => Number(e.currentTarget.id))\r\n                    }\r\n                  >\r\n                    {plurify(carryFloors.length - 1 - value, \"Floor\", \"Floors\")}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              No. of floors to carry from and to pickup routes\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Carry Floors*/}\r\n        {/*Payment Option*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              disabled={disableUI}\r\n              variant=\"outline-light\"\r\n              className=\"py-1 rounded-0 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n            >\r\n              Payment method : {`${paymentOption}`.toLowerCase()}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {[\"Cash\", \"Eft\"].map((value, i) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    key={i}\r\n                    id={value}\r\n                    className=\"fw-bold\"\r\n                    onClick={(e) =>\r\n                      setPaymentOption((_) => `${value}`.toUpperCase())\r\n                    }\r\n                  >\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              <span className=\"text-danger fw-bold\">Please note! </span> pay{\" \"}\r\n              {`${paymentOption}`.toLowerCase()} at delivery point\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Payment Option*/}\r\n        {/*Driver Note*/}\r\n        <Form.Group className=\"px-3\">\r\n          <Form.Label>Driver note</Form.Label>\r\n          <Form.Control\r\n            required={false}\r\n            disabled={disableUI}\r\n            ref={driverNoteRef}\r\n            className=\"w-100 rounded-0 fw-bold\"\r\n            // placeholder={context.job.driver_note}\r\n          />\r\n          <Form.Text>\r\n            Leave a note for the driver, this can be any information you'd like\r\n            to convey or any special requests.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        {/*Driver Note*/}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0\">\r\n        <Button\r\n          disabled={disableUI}\r\n          variant=\"outline-primary\"\r\n          className=\"border-0 rounded-0 fw-bold\"\r\n          onClick={async () => await validateDateTime(startDateTime)}\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Container, Form, FormGroup, ListGroup } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\n\r\n// widgets\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\nimport { Divider } from \"../sub-components/divider\";\r\n// icons\r\n// import { AiFillEdit } from \"react-icons/ai\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { TbLocationFilled } from \"react-icons/tb\";\r\n\r\n// context\r\nimport { UPDATE_JOB_CONTEXT } from \"../utils/contexts\";\r\n\r\n// utils\r\nimport api from \"../utils/api\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\nimport {\r\n  NOTIFICATION_TYPE,\r\n  ROUTE_DESCRIPTION,\r\n  SHUTTLE_SERVICE,\r\n} from \"../utils/strings\";\r\nimport { ROUTE_LINKS } from \"../utils/strings\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { EDIT_VEHICLE_SIZE_MODAL } from \"../modals/edit-vehicle-size-modal\";\r\nimport { EDIT_ROUTES_MODAL } from \"../modals/edit-routes-modal\";\r\nimport { EDIT_ADDITIONAL_INFO_MODAL } from \"../modals/edit-additional-info-modal\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// import\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\nimport { AnimatedButton } from \"../sub-components/animated-button\";\r\nimport { DATE_FORMATER, TIME_FORMATER } from \"../utils/formats\";\r\nimport { JOB_INVOICE_SLIP } from \"../sub-components/quote-invoice-slip\";\r\n\r\n// export\r\nexport default function UpdateJob() {\r\n  // get url\r\n  const { id } = useParams();\r\n  // navigate\r\n  const navigate = useNavigate();\r\n\r\n  //  formaters\r\n  const formater = Intl.NumberFormat(\"en-ZA\", {\r\n    style: \"currency\",\r\n    currency: \"zar\",\r\n    minimumSignificantDigits: 1,\r\n  });\r\n\r\n  // react\r\n  const [showAdditionalInfoSection, setShowAdditionalInfoSection] =\r\n    React.useState(false);\r\n  const [showRouteSection, setShowRouteSection] = React.useState(false);\r\n  const [showVehicleSizeSection, setShowVehicleSizeSection] =\r\n    React.useState(false);\r\n\r\n  const [job, setJob] = React.useState({});\r\n  const [jobLoaded, setJobLoaded] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n  };\r\n\r\n  // function to determin\r\n  const pickupDropOff = (list, current) => {\r\n    if (current <= 0) {\r\n      return \"Pickup\";\r\n    } else if (current > 0 && current < list.length - 1) {\r\n      return \"Pickup|Dropoff\";\r\n    }\r\n    //\r\n    return \"Dropoff\";\r\n  };\r\n\r\n  //\r\n  const setHeaderStatus = (job_loaded) => {\r\n    if (job_loaded) {\r\n      if (job_loaded.job_completed) return [true, job_loaded];\r\n      else if (job_loaded.job_canceled) return [true, job_loaded];\r\n      else return [false, job_loaded];\r\n    }\r\n  };\r\n\r\n  // set header text for job headings\r\n  const setSectionHeaderTextColor = (loaded) => {\r\n    if (loaded) {\r\n      if (job.job_completed || job.job_canceled) return \"muted\";\r\n      else return \"white\";\r\n    }\r\n  };\r\n\r\n  //\r\n  const setHeaderText = (loaded) => {\r\n    if (loaded) {\r\n      if (job.job_completed) return \"COMPLETED\";\r\n      else if (job.job_canceled) return \"CANCELLED\";\r\n      else return \"ACTIVE\";\r\n    }\r\n  };\r\n  // pick job color\r\n  const setHeaderColor = (loaded) => {\r\n    if (loaded) {\r\n      if (job.job_completed) return \"secondary\";\r\n      else if (job.job_canceled) return \"danger\";\r\n      else return \"success\";\r\n    }\r\n  };\r\n  // section vehicle size\r\n  const jobSection = (leading, onClick, job_details) => {\r\n    // resolve them to their respective components\r\n    const [disable, _job] = job_details;\r\n    // headerClass\r\n    const headerClassName =\r\n      \"px-3 py-2 d-flex flex-row justify-content-between align-items-center bg-opacity-75\";\r\n    // return\r\n    return (\r\n      <div>\r\n        <AnimatedButton\r\n          onClick={disable ? null : () => onClick(true)}\r\n          className=\"w-100\"\r\n        >\r\n          <div className={`bg-${setHeaderColor(_job)} ${headerClassName}`}>\r\n            {/*header*/}\r\n            <span\r\n              className={`text-${setSectionHeaderTextColor(_job)}`}\r\n              style={{ fontWeight: 900, fontSize: `${18 / 16}rem` }}\r\n            >\r\n              {leading}\r\n            </span>\r\n            {/*header*/}\r\n            {/*Icon*/}\r\n            <FiEdit className={`text-${setSectionHeaderTextColor(_job)}`} />\r\n            {/*Icon*/}\r\n          </div>\r\n        </AnimatedButton>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DriverNote = ({ leading, trailing }) => {\r\n    return (\r\n      <div className=\"px-3 d-flex flex-column justify-content-start align-items-start\">\r\n        <span className=\"text-dark fw-bold\">{leading}:</span>\r\n        <span className=\"fw-normal text-info\">{trailing}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // secondary display routes\r\n  const DisplayRoutes = ({ job }) => {\r\n    return (\r\n      <div className=\"px-3 my-2\">\r\n        <table\r\n          className={`table table-${setHeaderColor(\r\n            job\r\n          )} table-striped table-bordered m-0`}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Routes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {job.routes.map((route, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    <div className=\"d-flex flex-column\">\r\n                      <span className=\"form-text fw-bold\">\r\n                        {index + 1} - {ROUTE_DESCRIPTION[route.description]}\r\n                      </span>\r\n                      <span>{route.route_name}</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {/*table*/}\r\n        <table\r\n          className={`table table-striped table-bordered table-${setHeaderColor(\r\n            job\r\n          )} m-0 mt-2`}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Qty</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Distance</td>\r\n              <td>{`${job.distance} km`}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/*table*/}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // display routes\r\n  const DisplayJobRoutes = ({ job }) => {\r\n    return <Form.Group className=\"mx-3 my-2\">{/*table*/}</Form.Group>;\r\n  };\r\n\r\n  // cannot edit completed job\r\n  const editCompleted = (job_loaded) => {\r\n    if (job_loaded.job_completed || job_loaded.job_canceled) {\r\n      return (\r\n        <div className=\"bg-warning bg-opacity-25 p-3 text-center\">\r\n          <span className=\"mb-2 text-dark\">\r\n            <span className=\"text-danger fw-bold\">Please note!</span> a\r\n            completed or cancelled job cannot be edited.\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // displayAdditional information\r\n  const DisplayAdditionalInformation = ({ job }) => {\r\n    console.log(job);\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"px-3 pt-2 pb-3\">\r\n          <table\r\n            className={`table table-striped table-bordered table-${setHeaderColor(\r\n              job\r\n            )} m-0`}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Qty</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Job date</td>\r\n                <td>{`${DATE_FORMATER.format(new Date(job.job_date))}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Job time</td>\r\n                <td>{`${TIME_FORMATER.format(\r\n                  new Date(`${job.job_date} ${job.job_time}`)\r\n                )}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Payment option</td>\r\n                <td>{`${job.payment_option}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Helpers</td>\r\n                <td>{`${job.helpers}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Floors</td>\r\n                <td>{`${job.floors}`}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // loadJob\r\n  const loadJob = (isLoaded) => {\r\n    if (isLoaded) {\r\n      return (\r\n        <React.Fragment>\r\n          {/*section vehicle Size*/}\r\n          {jobSection(\r\n            \"Job vehicle type\",\r\n            setShowVehicleSizeSection,\r\n            setHeaderStatus(job)\r\n          )}\r\n          <div className=\"my-2 px-3\">\r\n            <table\r\n              className={`table table-striped table-bordered table-${setHeaderColor(\r\n                job\r\n              )} m-0`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Vehicle size</td>\r\n                  <td>{`${job.vehicle_size} Ton`}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/*section vehicle Size*/}\r\n          {/*section Routes */}\r\n          {jobSection(\"Job routes\", setShowRouteSection, setHeaderStatus(job))}\r\n          <DisplayRoutes job={job} />\r\n          {/* {displayRoutes(job.routes)} */}\r\n          {/*section Routes */}\r\n          {/*additional information*/}\r\n          {jobSection(\r\n            \"Job add-info \",\r\n            setShowAdditionalInfoSection,\r\n            setHeaderStatus(job)\r\n          )}\r\n          <DisplayAdditionalInformation job={job} />\r\n          {/* {displayAdditionalInfo(job)} */}\r\n          {/*additional information*/}\r\n          {/*Quote*/}\r\n\r\n          <JOB_INVOICE_SLIP job={job} />\r\n          {/*Quote*/}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return <></>;\r\n  };\r\n\r\n  // function to getch\r\n  const fetchUpdateJob = React.useCallback(async () => {\r\n    // check if logged in\r\n    const [verify, _] = IS_LOGGED_IN();\r\n    // verify\r\n    if (verify) {\r\n      //\r\n      setJobLoaded((_) => false);\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Fetching Job...\", \"\");\r\n\r\n      //\r\n      const url = `jobs/api/get/${id}/`;\r\n      await api\r\n        .get(url)\r\n        .then((r) => {\r\n          // check\r\n          if (r.status === 200) {\r\n            setJob((_) => r.data);\r\n            setJobLoaded((_) => true);\r\n            setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          // set\r\n          setJobLoaded((_) => false);\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n\r\n      return;\r\n    }\r\n\r\n    // otherwise\r\n    const message =\r\n      \"To view this section you must be signed in. we'll navigate you to the sign-in page.\";\r\n    setNotification(NOTIFICATION_TYPE.info, \"Dear valued customer. \", message);\r\n    // sleep\r\n    await AwaitCallBack(() => navigate(ROUTE_LINKS.signin), 6000);\r\n    // return\r\n  }, []);\r\n\r\n  // load modals\r\n  const loadModals = (loaded, verifiedJob) => {\r\n    if (loaded) {\r\n      return (\r\n        <React.Fragment>\r\n          {/*Additional Info*/}\r\n          <UPDATE_JOB_CONTEXT.Provider\r\n            value={{\r\n              show: showAdditionalInfoSection,\r\n              setShow: setShowAdditionalInfoSection,\r\n              job: verifiedJob,\r\n            }}\r\n          >\r\n            <EDIT_ADDITIONAL_INFO_MODAL />\r\n          </UPDATE_JOB_CONTEXT.Provider>\r\n          {/*Additional Info*/}\r\n          {/*Vehicle size*/}\r\n          <UPDATE_JOB_CONTEXT.Provider\r\n            value={{\r\n              show: showVehicleSizeSection,\r\n              setShow: setShowVehicleSizeSection,\r\n              job: verifiedJob,\r\n            }}\r\n          >\r\n            <EDIT_VEHICLE_SIZE_MODAL />\r\n          </UPDATE_JOB_CONTEXT.Provider>\r\n          {/*Vehicle size*/}\r\n          {/*edit routes*/}\r\n          <UPDATE_JOB_CONTEXT.Provider\r\n            value={{\r\n              show: showRouteSection,\r\n              setShow: setShowRouteSection,\r\n              job: verifiedJob,\r\n            }}\r\n          >\r\n            <EDIT_ROUTES_MODAL />\r\n          </UPDATE_JOB_CONTEXT.Provider>\r\n          {/*edit routes*/}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  // React hook\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchUpdateJob();\r\n  }, [fetchUpdateJob]);\r\n\r\n  //safe\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3 px-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0\">\r\n          <Card.Header\r\n            className={`bg-${setHeaderColor(\r\n              jobLoaded\r\n            )} text-white rounded-0 border-0 mb-0`}\r\n          >\r\n            <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n              <span style={{ fontWeight: \"900\" }}>INVOICE {id}</span>\r\n              <span className={`text-white fw-bold`}>\r\n                {setHeaderText(jobLoaded)}\r\n              </span>\r\n            </div>\r\n          </Card.Header>\r\n\r\n          <Card.Body className=\"p-0\">\r\n            {editCompleted(job)}\r\n            {/*NOTIFICATIONS*/}\r\n            {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n            {/*NOTIFICATIONS*/}\r\n            {/*Load Job*/}\r\n            {loadJob(jobLoaded)}\r\n            {/*Load Job*/}\r\n          </Card.Body>\r\n        </Card>\r\n        {/*Modals*/}\r\n        {loadModals(jobLoaded, job)}\r\n        {/*Modals*/}\r\n      </Container>\r\n      <VerticalSpacer height={\"100px\"} />\r\n    </motion.section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Divider() {\r\n  return (\r\n    <hr\r\n      className=\"p-0 my-2 border-0\"\r\n      color=\"#c9c9c9\"\r\n      style={{\r\n        height: \"2px\",\r\n        width: \"100%\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, OverlayTrigger, Popover } from \"react-bootstrap\";\r\n\r\nimport { BsInfoCircle as InfoIcon } from \"react-icons/bs\";\r\n// import { FaInfoCircle as InfoIcon } from \"react-icons/fa\";\r\n\r\nimport {\r\n  AMOUNT_DUE,\r\n  BASE_AMOUNT,\r\n  EXTRA_DISCOUNT,\r\n  OFFPEAK,\r\n  PRICE_ADJUSTMENT,\r\n  RETURN_CUSTOMER,\r\n} from \"../utils/strings\";\r\nimport { AnimatedButton } from \"./animated-button\";\r\n\r\n// export export\r\nexport function JOB_INVOICE_SLIP({ job, padding = \"p-3\" }) {\r\n  // format\r\n  const formater = Intl.NumberFormat(\"en-ZA\", {\r\n    style: \"currency\",\r\n    currency: \"zar\",\r\n    minimumSignificantDigits: 1,\r\n  });\r\n\r\n  //const popover\r\n  const popover = (body) => {\r\n    return (\r\n      <Popover\r\n        id=\"popover-basic\"\r\n        className=\"rounded-0 border-secondary\"\r\n        arrowProps={{ style: { backgroundColor: \"red\" } }}\r\n      >\r\n        <Popover.Body className=\"text-secondary fw-bold rounded-0\">\r\n          {body}\r\n        </Popover.Body>\r\n      </Popover>\r\n    );\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Card className=\"dropdown__shadow rounded-0 border-0\">\r\n      <Card.Body className={`${padding}`}>\r\n        {/*table*/}\r\n        <table className={`table table-bordered table-striped table-dark m-0`}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Price(ZAR)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Base fee</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${BASE_AMOUNT}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>{`${formater.format(job.base_fee)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Off peak</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${OFFPEAK}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.mid_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.mid_discount)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Return customer</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${RETURN_CUSTOMER}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.return_customer_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.return_customer_discount)}`}</td>\r\n            </tr>\r\n            {/*extra discount*/}\r\n            {job.give_extra_discount ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <span>Extra discount</span>\r\n                    <AnimatedButton className=\"px-1\">\r\n                      <OverlayTrigger\r\n                        trigger=\"click\"\r\n                        placement=\"top\"\r\n                        rootClose={true}\r\n                        overlay={popover(`${EXTRA_DISCOUNT}`)}\r\n                      >\r\n                        <div>\r\n                          <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                        </div>\r\n                      </OverlayTrigger>\r\n                    </AnimatedButton>\r\n                  </div>\r\n                </td>\r\n                <td className=\"text-danger\">{`${\r\n                  job.give_extra_discount ? \"-\" : \"\"\r\n                } ${formater.format(job.extra_discount)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n            {job.set_price_adjustment ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <div className=\"d-flex flex-row\">\r\n                      <span>Price adjustment</span>\r\n                      <AnimatedButton className=\"px-1\">\r\n                        <OverlayTrigger\r\n                          trigger=\"click\"\r\n                          placement=\"top\"\r\n                          rootClose={true}\r\n                          overlay={popover(`${PRICE_ADJUSTMENT}`)}\r\n                        >\r\n                          <div>\r\n                            <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                      </AnimatedButton>\r\n                    </div>\r\n                    <span className=\"text-muted form-text fw-bold border border-2 px-1 bg-light\">\r\n                      Price adjustment justification:{\" \"}\r\n                      <span className=\"text-dark\">\r\n                        {job.price_adjustment_justification}\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>{`${formater.format(job.price_adjustment)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span style={{ fontWeight: \"900\" }}>Amount due</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${AMOUNT_DUE}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"900\",\r\n                    fontSize: `${20 / 16}rem`,\r\n                  }}\r\n                >\r\n                  {formater.format(job.amount_due).replace(\"ZA\", \"\")}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        {/*table*/}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// create context\r\nexport const REQUEST_SIGNIN_CONTEXT = React.createContext();\r\nexport const REQUEST_GOOGLE_SIGNIN_CONTEXT = React.createContext();\r\nexport const CREATE_JOB_CONTEXT = React.createContext();\r\nexport const UPDATE_JOB_CONTEXT = React.createContext();\r\nexport const COMPLETE_JOB_CONTEXT = React.createContext();\r\nexport const JOB_NOTIFICATION_CONTEXT = React.createContext();\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n","// formaters\r\nexport const DATE_FORMATER = Intl.DateTimeFormat(\"en-ZA\", {\r\n  weekdays: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n});\r\n\r\n// time formater\r\nexport const TIME_FORMATER = Intl.DateTimeFormat(\"en-Za\", {\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  // second: \"numeric\",\r\n  timeZone: \"Africa/Harare\",\r\n  timeZoneName: \"short\",\r\n});\r\n\r\nexport const CURRENCY_FORMATER = Intl.NumberFormat(\"en-ZA\", {\r\n  style: \"currency\",\r\n  currency: \"zar\",\r\n  minimumSignificantDigits: 1,\r\n});\r\n"],"names":["EDIT_VEHICLE_SIZE_MODAL","context","React","UPDATE_JOB_CONTEXT","navigate","useNavigate","modalRef","selectedVehicle","setSelectedVehicle","disableUI","setDisableUI","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","disable","vSize","vsize","VEHICLE_TYPE","item","size","VChecked","selected","job","vehicle_size","_jsxs","Modal","centered","show","contentClassName","onHide","setShow","children","_jsx","ref","closeButton","className","style","fontWeight","NOTIFICATIONS","Carousel","activeIndex","controls","indicators","v","i","src","img","alt","concat","AnimatedButton","Form","id","disabled","value","checked","onClick","e","fontSize","description","onChange","Button","variant","async","verify","__","IS_LOGGED_IN","_modalRef$current","current","scrollIntoView","block","url","api","toFixed","then","updateUrl","AwaitCallBack","window","location","href","catch","ErrorHandling","ROUTE_LINKS","updateVSize","EDIT_ROUTES_MODAL","searchRouteRef","pickedRoutes","setPickedRoutes","placesService","placePredictions","getPlacePredictions","isPlacePredictionsLoading","usePlacesService","apiKey","GOOGLE_API_KEY","debounce","options","componentRestrictions","country","Routes","_ref","routes","length","map","route","index","list","route_name","newRouteList","filter","pickupDropOff","seachListItem","searchList","getRouteAddress","place","getDetails","placeId","place_id","placeDetails","loc","structured_formatting","main_text","secondary_text","lat","geometry","lng","input","HiLocationMarker","color","updateJobRoutes","tokens","config","headers","Authorization","access","payload","InputGroup","placeholder","target","MdEditLocationAlt","listStyle","zIndex","isloading","role","routeList","r","status","responseData","distance","data","generateDistance","EDIT_ADDITIONAL_INFO_MODAL","driverNoteRef","startDateTime","setStartDateTime","Date","additionalHelpers","setAdditionalHelpers","floorsToCarry","setFloorsToCarry","shuttle","setShuttle","disableShuttling","setDisableShuttling","paymentOption","setPaymentOption","dateBorderColor","setDateBorderColor","addHelpers","Array","fill","carryFloors","disableUserInterface","plurify","singular","plural","updateAdditionalInfo","msg","leadMsg","onEntered","driver_note","floors","helpers","verifyDisabledShuttlingField","vType","sType","payment_option","job_date","job_time","DatePicker","startDate","minDate","now","dateFormat","timeFormat","calendarClassName","showTimeSelect","showPopperArrow","onFocus","readOnly","dateTime","Dropdown","Number","currentTarget","toLowerCase","toUpperCase","required","DATETIME_ERROR_MESSAGE","dateYear","getFullYear","dateMonth","getMonth","dateDay","getDate","timeHour","getHours","timeMinute","getMinutes","timeSeconds","getSeconds","jobDate","jobTime","validateDateTime","UpdateJob","useParams","showAdditionalInfoSection","setShowAdditionalInfoSection","Intl","NumberFormat","currency","minimumSignificantDigits","showRouteSection","setShowRouteSection","showVehicleSizeSection","setShowVehicleSizeSection","setJob","jobLoaded","setJobLoaded","setHeaderStatus","job_loaded","job_completed","job_canceled","setSectionHeaderTextColor","loaded","setHeaderColor","jobSection","job_details","_job","FiEdit","DisplayRoutes","_ref2","scope","ROUTE_DESCRIPTION","DisplayAdditionalInformation","_ref4","console","log","DATE_FORMATER","TIME_FORMATER","fetchUpdateJob","scrollTo","motion","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","Container","Card","setHeaderText","editCompleted","isLoaded","JOB_INVOICE_SLIP","_Fragment","loadModals","verifiedJob","VerticalSpacer","height","Divider","width","padding","formater","popover","body","Popover","arrowProps","backgroundColor","OverlayTrigger","trigger","placement","rootClose","overlay","BASE_AMOUNT","InfoIcon","format","base_fee","OFFPEAK","mid_discount","RETURN_CUSTOMER","return_customer_discount","give_extra_discount","EXTRA_DISCOUNT","extra_discount","set_price_adjustment","PRICE_ADJUSTMENT","price_adjustment_justification","price_adjustment","AMOUNT_DUE","amount_due","replace","REQUEST_SIGNIN_CONTEXT","REQUEST_GOOGLE_SIGNIN_CONTEXT","CREATE_JOB_CONTEXT","COMPLETE_JOB_CONTEXT","JOB_NOTIFICATION_CONTEXT","STATUS","response","statuscode","detail","email","request","message","DateTimeFormat","weekdays","year","month","day","hour","minute","timeZone","timeZoneName"],"sourceRoot":""}