{"version":3,"file":"static/js/417.48553359.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["usePrevious","value","ref","useRef","useEffect","current","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","propTypes","PropTypes","onClick","variant","CloseButton","React","_ref","className","props","_jsx","type","classNames","displayName","defaultProps","InputGroupText","createWithBsPrefix","Component","InputGroup","bsPrefix","size","hasValidation","as","useBootstrapPrefix","contextValue","useMemo","InputGroupContext","children","Object","assign","Text","Radio","FormCheckInput","Checkbox","context","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","arguments","length","undefined","this","modals","getScrollbarWidth","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","add","modal","modalIdx","indexOf","push","state","splice","isTopModal","_excluded","manager","useModalManager","provided","useWindow","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","exited","setExited","useState","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","isEscKey","defaultPrevented","dialogProps","tabIndex","renderTransition","unmountOnExit","mountOnEnter","appear","in","backdropElement","_Fragment","ReactDOM","_jsxs","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","hasClass","baseVal","marginProp","el","sharedManager","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","AbstractModalHeader","closeLabel","closeVariant","closeButton","useContext","ModalContext","handleClick","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useMergedRefs","useIsRTL","modalContext","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}