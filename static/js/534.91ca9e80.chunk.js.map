{"version":3,"file":"static/js/534.91ca9e80.chunk.js","mappings":"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","sources":["components/pages/reset-account.jsx","components/utils/status.jsx","components/utils/error-handling.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\n\r\nimport { NOTIFICATION_TYPE } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\n\r\n//\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\n\r\n// export\r\nexport default function ResetAccount() {\r\n  // ref\r\n  const emailRef = React.useRef();\r\n  //\r\n  const [validated, setValidated] = React.useState(false);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n  //\r\n  // function\r\n  const handleSubmit = async (event) => {\r\n    //\r\n    window.scrollTo(0, 0);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n\r\n    //\r\n    await accountReset({\r\n      email: emailRef.current.value,\r\n    });\r\n  };\r\n\r\n  //\r\n  const accountReset = React.useCallback(async (payload) => {\r\n    // notify\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Resetting ...\", \"\");\r\n\r\n    // url link\r\n    const url = \"accounts/api/account/password/reset/\";\r\n    await api\r\n      .post(url, payload)\r\n      .then((r) => {\r\n        //\r\n        if (r.status === 200) {\r\n          setNotification(\r\n            NOTIFICATION_TYPE.success,\r\n            \"Awesome.\",\r\n            \"Success, a password reset link has been sent to your email, access to reset password.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        ErrorHandling(e, setNotification);\r\n      })\r\n      .finally(() => {\r\n        return;\r\n      });\r\n    //\r\n  }, []);\r\n\r\n  // react\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [accountReset]);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  //\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0 \">\r\n          {/*Form*/}\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Card.Header\r\n              as=\"h3\"\r\n              className=\"text-center pb-0 border-0 bg-transparent\"\r\n              style={{ fontWeight: \"900\" }}\r\n            >\r\n              Recover Account\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {/*NOTIFICATIONS*/}\r\n              {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n              {/*NOTIFICATIONS*/}\r\n\r\n              {/*Email*/}\r\n              <Form.Group\r\n                className={`mb-2 mt-${\r\n                  notificationType === NOTIFICATION_TYPE.none ? \"0\" : \"3\"\r\n                }`}\r\n              >\r\n                <Form.FloatingLabel\r\n                  label=\"Recovery email\"\r\n                  className=\"fw-bold\"\r\n                  style={{\r\n                    color: \"grey\",\r\n                  }}\r\n                >\r\n                  <Form.Control\r\n                    placeholder=\"xlines@example.co.za\"\r\n                    className=\"rounded-0 fw-bold\"\r\n                    disabled={disableUI}\r\n                    required={true}\r\n                    ref={emailRef}\r\n                    type=\"email\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter correct recovery email address to continue.\r\n                  </Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </Form.Group>\r\n              {/*Email*/}\r\n            </Card.Body>\r\n            <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n              {/*Button*/}\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"w-100 text-white border-0 rounded-0 fw-bold border-0\"\r\n                disabled={disableUI}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n              {/*Button*/}\r\n            </Card.Footer>\r\n          </Form>\r\n          {/*Form*/}\r\n        </Card>\r\n      </Container>\r\n      <VerticalSpacer height={`${window.innerHeight / 2}px`} />\r\n    </motion.section>\r\n  );\r\n}\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n"],"names":["ResetAccount","emailRef","React","validated","setValidated","disableUI","setDisableUI","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","disable","accountReset","async","api","payload","then","r","status","catch","e","ErrorHandling","finally","window","scrollTo","_jsxs","motion","className","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","children","_jsx","Container","Card","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","email","current","value","as","style","fontWeight","NOTIFICATIONS","concat","label","color","placeholder","disabled","required","ref","Button","variant","VerticalSpacer","height","innerHeight","STATUS","response","msg","statuscode","data","detail","request","message"],"sourceRoot":""}