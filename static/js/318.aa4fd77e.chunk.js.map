{"version":3,"file":"static/js/318.aa4fd77e.chunk.js","mappings":"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","sources":["components/modals/complete-vehicle-size-modal.jsx","components/modals/complete-add-info-modal.jsx","components/modals/complete-routes-modal.jsx","components/pages/complete-job.jsx","components/sub-components/quote-invoice-slip.jsx","components/utils/contexts.jsx","components/utils/status.jsx","components/utils/error-handling.jsx","components/utils/formats.jsx","components/utils/jwt-encode-job.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Carousel, Form, Modal } from \"react-bootstrap\";\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS, VEHICLE_TYPE } from \"../utils/strings\";\r\nimport { COMPLETE_JOB_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AnimatedButton } from \"../sub-components/animated-button\";\r\n\r\n// export\r\nexport function COMPLETE_VEHICLE_SIZE_MODAL() {\r\n  // context\r\n  const context = React.useContext(COMPLETE_JOB_CONTEXT);\r\n\r\n  // ref\r\n  const modalRef = React.useRef();\r\n\r\n  // React Hook useState\r\n  const [selectedVehicle, setSelectedVehicle] = React.useState(0);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n    setDisableUI(\r\n      (_) =>\r\n        type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success\r\n    );\r\n  };\r\n\r\n  //\r\n  const updateVehicleSize = async (vType) => {\r\n    //\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n\r\n    // const\r\n    const url = `quote/job/api/update/${context.primaryKey}/`;\r\n    await api\r\n      .put(url, { vehicle_size: vType })\r\n      .then(async (r) => {\r\n        // if\r\n        if (r.status === 200) {\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", \"Updated\");\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          await AwaitCallBack(\r\n            () =>\r\n              (window.location.href = `/jobs/job/${context.primaryKey}/create`)\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  };\r\n\r\n  //\r\n  const fetchQuoteJob = React.useCallback(async (pk) => {\r\n    // #.... fetching\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n    // # ... url\r\n    const url = `quote/job/api/get/${pk}/`;\r\n    await api\r\n      .get(url)\r\n      .then((r) => {\r\n        setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n        if (r.status === 200) setVehicleType(r.data);\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  }, []);\r\n\r\n  // vsize\r\n  const vSize = (vsize) => {\r\n    //find\r\n    const index = VEHICLE_TYPE.findIndex((item) => {\r\n      return item.size === vsize.size;\r\n    });\r\n    // return\r\n    return index;\r\n  };\r\n\r\n  // function\r\n  const VChecked = (selected, vSize) =>\r\n    VEHICLE_TYPE[selected].size === vSize.size;\r\n\r\n  //\r\n  const setVehicleType = (payload) => {\r\n    //find\r\n    const index = VEHICLE_TYPE.findIndex((item) => {\r\n      const jobVSize = Number(payload.vehicle_size).toFixed(1);\r\n      const itemSize = Number(`${item.size}`).toFixed(1);\r\n      return itemSize === jobVSize;\r\n    });\r\n    // select current vehicle size\r\n    setSelectedVehicle((_) => index);\r\n  };\r\n  //\r\n  React.useEffect(() => {\r\n    fetchQuoteJob(context.primaryKey);\r\n  }, [context.show]);\r\n\r\n  //\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0\"\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n            }\r\n      }\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        // closeVariant=\"dark\"\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          Edit vehicle size\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*Carousel*/}\r\n        <Carousel\r\n          activeIndex={selectedVehicle}\r\n          controls={false}\r\n          indicators={false}\r\n        >\r\n          {VEHICLE_TYPE.map((v, i) => {\r\n            //return\r\n            return (\r\n              <Carousel.Item className=\"px-4 pt-2\" key={i}>\r\n                <div className=\"w-100 d-flex justify-content-center align-items-center\">\r\n                  <img className=\"d-block w-75\" src={v.img} alt={`${v.size}`} />\r\n                </div>\r\n              </Carousel.Item>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        {/*Carousel*/}\r\n        {/*Buttons*/}\r\n        <div className=\"py-3 d-flex flex-column justify-content-start align-items-start gap-2\">\r\n          {VEHICLE_TYPE.map((vsize, i) => {\r\n            return (\r\n              <AnimatedButton key={i} className=\"p-1\">\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    disabled={disableUI}\r\n                    value={vsize.size}\r\n                    checked={VChecked(selectedVehicle, vsize)}\r\n                    onClick={(e) => setSelectedVehicle((_) => vSize(vsize))}\r\n                  >\r\n                    <Form.Check.Label\r\n                      style={{\r\n                        fontSize: `${14 / 16}rem`,\r\n                        fontWeight: VChecked(selectedVehicle, vsize) ? 600 : \"\",\r\n                      }}\r\n                      onClick={(e) => setSelectedVehicle((_) => vSize(vsize))}\r\n                    >\r\n                      <span\r\n                        className={`text-${\r\n                          VChecked(selectedVehicle, vsize) ? \"primary\" : \"dark\"\r\n                        }`}\r\n                        style={{ fontWeight: \"900\" }}\r\n                      >\r\n                        {vsize.size} Ton\r\n                      </span>{\" \"}\r\n                      {vsize.description}\r\n                    </Form.Check.Label>\r\n                    <Form.Check.Input\r\n                      type=\"checkbox\"\r\n                      value={vsize.size}\r\n                      disabled={disableUI}\r\n                      onChange={(e) => {}}\r\n                      onClick={(e) => setSelectedVehicle((_) => vSize(vsize))}\r\n                      checked={VChecked(selectedVehicle, vsize)}\r\n                    />\r\n                  </Form.Check>\r\n                </Form.Group>\r\n              </AnimatedButton>\r\n            );\r\n          })}\r\n          {/*Buttons*/}\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          className=\"border-0 rounded-0 fw-bold\"\r\n          disabled={disableUI}\r\n          onClick={async () =>\r\n            await updateVehicleSize(\r\n              VEHICLE_TYPE[selectedVehicle].size.toFixed(1)\r\n            )\r\n          }\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Dropdown, Form, Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n// utils\r\nimport {\r\n  DATETIME_ERROR_MESSAGE,\r\n  NOTIFICATION_TYPE,\r\n  SHUTTLE_SERVICE,\r\n  VEHICLE_TYPE,\r\n} from \"../utils/strings\";\r\nimport { COMPLETE_JOB_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\n\r\nimport \"./date_time.css\";\r\n//\r\n// export\r\nexport function COMPLETE_ADD_INFO_MODAL() {\r\n  // context\r\n  const context = React.useContext(COMPLETE_JOB_CONTEXT);\r\n\r\n  // ref\r\n  const driverNoteRef = React.useRef();\r\n  const modalRef = React.useRef();\r\n  //\r\n  const [startDateTime, setStartDateTime] = React.useState(new Date());\r\n  const [additionalHelpers, setAdditionalHelpers] = React.useState(1);\r\n  const [floorsToCarry, setFloorsToCarry] = React.useState(0);\r\n  const [shuttle, setShuttle] = React.useState(0);\r\n  const [disableShuttling, setDisableShuttling] = React.useState(false);\r\n  const [paymentOption, setPaymentOption] = React.useState(\"CASH\");\r\n  const [driverNote, setDriverNote] = React.useState(\"\");\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  //\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n  const [dateBorderColor, setDateBorderColor] =\r\n    React.useState(\"border-0 text-dark\");\r\n  // const\r\n  const addHelpers = Array(3).fill(0);\r\n  const carryFloors = Array(11).fill(0);\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disableUserInterface =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disableUserInterface);\r\n  };\r\n\r\n  //\r\n  const plurify = (value, singular, plural) => {\r\n    if (value > 1) return `${value} ${plural}`;\r\n    return `${value} ${singular}`;\r\n  };\r\n\r\n  //\r\n  const updateAddInfo = async (payload) => {\r\n    //\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n\r\n    // const\r\n    const url = `quote/job/api/update/${context.primaryKey}/`;\r\n    await api\r\n      .put(url, payload)\r\n      .then(async (r) => {\r\n        // if\r\n        if (r.status === 200) {\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", \"Updated\");\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          await AwaitCallBack(\r\n            () =>\r\n              (window.location.href = `/jobs/job/${context.primaryKey}/create`)\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  };\r\n\r\n  //\r\n  // validate Date\r\n  const validateDateTime = async (dateTime) => {\r\n    // scroll\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    //desired time\r\n    const desiredTime = (1 * 60 + 30) * 60 * 1000;\r\n    // validate\r\n    const verify = dateTime - Date.now() < desiredTime;\r\n\r\n    // raise and erro\r\n    if (verify) {\r\n      setDateBorderColor((_) => \"border border-danger border-1 text-danger\");\r\n      setNotification(\r\n        NOTIFICATION_TYPE.error,\r\n        \"Oops! error. \",\r\n        `${DATETIME_ERROR_MESSAGE}`\r\n      );\r\n      return;\r\n    }\r\n    // just incase\r\n    setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n    setDateBorderColor((_) => \"border-0 text-dark\");\r\n\r\n    // resolve to respective components\r\n    const dateYear = startDateTime.getFullYear();\r\n    const dateMonth = startDateTime.getMonth() + 1;\r\n    const dateDay = startDateTime.getDate();\r\n    const timeHour = startDateTime.getHours();\r\n    const timeMinute = startDateTime.getMinutes();\r\n    const timeSeconds = startDateTime.getSeconds();\r\n\r\n    // otherwise everything is good\r\n    const jobDate = `${dateYear}-${dateMonth}-${dateDay}`;\r\n    const jobTime = `${timeHour}:${timeMinute}:${timeSeconds}`;\r\n\r\n    // set payload\r\n    await updateAddInfo({\r\n      job_date: jobDate,\r\n      job_time: jobTime,\r\n      helpers: additionalHelpers,\r\n      shuttle: shuttle,\r\n      floors: floorsToCarry,\r\n      payment_option: paymentOption,\r\n      driver_note: driverNoteRef.current.value,\r\n    });\r\n  };\r\n\r\n  // disable shuttling\r\n  const verifyDisabledShuttlingField = (vType, sType) => {\r\n    if (vType <= VEHICLE_TYPE[1].size) {\r\n      setDisableShuttling((_) => true);\r\n      setShuttle((_) => 0);\r\n      return;\r\n    }\r\n    // otherwise enable it\r\n    setDisableShuttling((_) => false);\r\n    setShuttle((_) => sType);\r\n  };\r\n\r\n  // retrieve\r\n  const setAddInfo = async (pk) => {\r\n    // editing\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n\r\n    // url\r\n    const url = `quote/job/api/get/${pk}/`;\r\n    await api\r\n      .get(url)\r\n      .then((r) => {\r\n        setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n        if (r.status === 200) {\r\n          // variables\r\n          const dateTime = new Date(`${r.data.job_date} ${r.data.job_time}`);\r\n          driverNoteRef.current.value = r.data.driver_note;\r\n          // set helpers\r\n          setAdditionalHelpers((_) => r.data.helpers);\r\n          setFloorsToCarry((_) => r.data.floors);\r\n          verifyDisabledShuttlingField(r.data.vehicle_size, r.data.shuttle);\r\n          setPaymentOption((_) => r.data.payment_option);\r\n          // set date\r\n          setStartDateTime((_) => dateTime);\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0\"\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              setDateBorderColor((_) => \"border-0 text-dark\");\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n            }\r\n      }\r\n      onEntered={() => setAddInfo(context.primaryKey)}\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        // closeVariant=\"dark\"\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          Edit additional information\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*Choose Date Time */}\r\n        <Form.Group\r\n          className={`position-relative mb-3 mt-${\r\n            notificationType === NOTIFICATION_TYPE.none ? \"0\" : \"3\"\r\n          }`}\r\n        >\r\n          <DatePicker\r\n            disabled={disableUI}\r\n            startDate={startDateTime}\r\n            minDate={Date.now()}\r\n            showTimeSelect={true}\r\n            showPopperArrow={false}\r\n            className={`form-control py-1 w-auto rounded-0 bg-white border-0 fw-bold text-start border-primary date__time`}\r\n            dateFormat=\"yyyy-MMM-dd HH:mm\"\r\n            timeFormat=\"HH:mm\"\r\n            calendarClassName=\"rounded-0 w-100 d-flex flex-row\"\r\n            selected={startDateTime}\r\n            onFocus={(e) => (e.target.readOnly = true)}\r\n            onChange={(dateTime) => {\r\n              setStartDateTime((_) => dateTime);\r\n            }}\r\n          />\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>Job date and time</Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Choose Date Time */}\r\n        {/*Additional information*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              disabled={disableUI}\r\n              variant=\"outline-light\"\r\n              className=\"py-1 rounded-0 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n            >\r\n              Additional helpers : {additionalHelpers}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {addHelpers.map((_, value) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    className=\"fw-bold\"\r\n                    key={value + 1}\r\n                    id={addHelpers.length - value}\r\n                    onClick={(e) =>\r\n                      setAdditionalHelpers((_) => Number(e.currentTarget.id))\r\n                    }\r\n                  >\r\n                    {plurify(addHelpers.length - value, \"Helper\", \"Helpers\")}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              Driver + {plurify(additionalHelpers, \"helper\", \"helpers\")}\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Additional information*/}\r\n        {/*Carry Floors*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              disabled={disableUI}\r\n              variant=\"outline-light\"\r\n              className=\"py-1 rounded-0 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n            >\r\n              Floors to carry : {floorsToCarry}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {carryFloors.map((_, value) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    className=\"fw-bold\"\r\n                    key={value}\r\n                    id={carryFloors.length - 1 - value}\r\n                    onClick={(e) =>\r\n                      setFloorsToCarry((_) => Number(e.currentTarget.id))\r\n                    }\r\n                  >\r\n                    {plurify(carryFloors.length - 1 - value, \"Floor\", \"Floors\")}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              No. of floors to carry from and to pickup routes.\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Carry Floors*/}\r\n        {/*Payment Option*/}\r\n        <Form.Group className=\"mb-3\">\r\n          <Dropdown className=\"border-0\">\r\n            <Dropdown.Toggle\r\n              disabled={disableUI}\r\n              variant=\"outline-light\"\r\n              className=\"py-1 rounded-0 border-0 text-dark fw-bold d-flex justify-content-between align-items-center\"\r\n            >\r\n              Payment method: {`${paymentOption}`.toLowerCase()}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"rounded-0\">\r\n              {[\"Cash\", \"Eft\"].map((value, i) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    key={i}\r\n                    id={value}\r\n                    className=\"fw-bold\"\r\n                    onClick={(e) =>\r\n                      setPaymentOption((_) => `${value}`.toUpperCase())\r\n                    }\r\n                  >\r\n                    {value}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"text-start ps-3\">\r\n            <Form.Text>\r\n              <span className=\"text-danger fw-bold\">Please note! </span> pay{\" \"}\r\n              {`${paymentOption}`.toLowerCase()} at delivery point.\r\n            </Form.Text>\r\n          </div>\r\n        </Form.Group>\r\n        {/*Payment Option*/}\r\n\r\n        {/*Driver Note*/}\r\n        <Form.Group className=\"px-3\">\r\n          <Form.Label>Driver note</Form.Label>\r\n          <Form.Control\r\n            // as=\"textarea\"\r\n            disabled={disableUI}\r\n            required={false}\r\n            ref={driverNoteRef}\r\n            className=\"w-100 h-50 rounded-0 fw-bold\"\r\n            placeholder={`${driverNote}`}\r\n          />\r\n          <Form.Text>\r\n            Leave a note for the driver, this can be any information you'd like\r\n            to convey or any special requests.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        {/*Driver Note*/}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0\">\r\n        <Button\r\n          disabled={disableUI}\r\n          variant=\"outline-primary\"\r\n          className=\"rounded-0 border-0 fw-bold\"\r\n          onClick={async () => await validateDateTime(startDateTime)}\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  CloseButton,\r\n  Form,\r\n  InputGroup,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\n// import { useNavigate } from \"react-router\";\r\nimport usePlacesService from \"react-google-autocomplete/lib/usePlacesAutocompleteService\";\r\n\r\n// contexts\r\nimport { COMPLETE_JOB_CONTEXT } from \"../utils/contexts\";\r\n\r\n// icons\r\nimport { HiLocationMarker } from \"react-icons/hi\";\r\nimport { TbLocationFilled } from \"react-icons/tb\";\r\nimport { MdEditLocationAlt } from \"react-icons/md\";\r\n\r\n// util\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { GOOGLE_API_KEY, NOTIFICATION_TYPE } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// export modal\r\nexport function COMPLETE_ROUTES_MODAL() {\r\n  //useRef\r\n  const searchRouteRef = React.useRef();\r\n  //\r\n  const context = React.useContext(COMPLETE_JOB_CONTEXT);\r\n  // ref\r\n  const modalRef = React.useRef();\r\n  // routes React usestate hook\r\n  const [pickedRoutes, setPickedRoutes] = React.useState([]);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  //\r\n  const {\r\n    placesService,\r\n    placePredictions,\r\n    getPlacePredictions,\r\n    isPlacePredictionsLoading,\r\n  } = usePlacesService({\r\n    apiKey: GOOGLE_API_KEY,\r\n    debounce: 100,\r\n    options: {\r\n      componentRestrictions: { country: \"za\" },\r\n    },\r\n  });\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // function to determin\r\n  const pickupDropOff = (list, current) => {\r\n    if (current <= 0) {\r\n      return \"Pickup\";\r\n    } else if (current > 0 && current < list.length - 1) {\r\n      return \"Pickup|Dropoff\";\r\n    }\r\n    //\r\n    return \"Dropoff\";\r\n  };\r\n\r\n  //\r\n  const updateRoutes = async (payload) => {\r\n    //\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Updating ...\", \"\");\r\n\r\n    // const\r\n    const url = `quote/job/api/update/${context.primaryKey}/`;\r\n    await api\r\n      .put(url, payload)\r\n      .then(async (r) => {\r\n        // if\r\n        if (r.status === 200) {\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", \"Updated\");\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          await AwaitCallBack(\r\n            () =>\r\n              (window.location.href = `/jobs/job/${context.primaryKey}/create`)\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  };\r\n  // function generate distance\r\n  const generateDistance = async (routeList) => {\r\n    //\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n\r\n    // set url\r\n    const url = \"jobs/api/compute-distance/\";\r\n    await api\r\n      .post(url, { routes: routeList })\r\n      .then(async (r) => {\r\n        if (r.status === 200) {\r\n          updateRoutes({\r\n            routes: routeList,\r\n            distance: r.data.distance,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  };\r\n\r\n  const Routes = ({ routes }) => {\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <table className=\"table table-bordered table-striped table-dark m-0\">\r\n          {/*head*/}\r\n          {routes.length > 0 ? (\r\n            <thead>\r\n              <tr>\r\n                <th>Routes</th>\r\n              </tr>\r\n            </thead>\r\n          ) : null}\r\n          {/*head*/}\r\n          {/*tbody*/}\r\n          <tbody>\r\n            {routes.map((route, index) => {\r\n              return (\r\n                <tr key={`route-${index}`}>\r\n                  <td>\r\n                    <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"form-text fw-bold text-warning\">\r\n                          {index + 1} - {pickupDropOff(routes, index)}\r\n                        </span>\r\n                        <span style={{ fontSize: `${14 / 16}rem` }}>\r\n                          {route.route_name}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"ms-2\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn-close btn-close-white\"\r\n                          aria-label=\"Close\"\r\n                          onClick={\r\n                            disableUI\r\n                              ? null\r\n                              : () => {\r\n                                  const newRouteList = pickedRoutes.filter(\r\n                                    function (item) {\r\n                                      return item !== route;\r\n                                    }\r\n                                  );\r\n                                  setPickedRoutes((_) => [...newRouteList]);\r\n                                }\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          {/*tbody*/}\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // show at the bottom of the search bar\r\n  const choosenRoutes = (routesList) => {\r\n    //\r\n    if (routesList.length > 0) {\r\n      return (\r\n        <ListGroup className=\"rounded-0 mt-3 gap-1\">\r\n          <span style={{ fontWeight: 900 }}>Job routes:</span>\r\n          {/*map routes*/}\r\n          {routesList.map((route, i) => {\r\n            return (\r\n              <ListGroup.Item\r\n                key={i}\r\n                className=\"p-2 d-flex flex-row justify-content-between align-items-start gap-2 border-white\"\r\n                style={{\r\n                  backgroundColor: \"var(--primary-color-opacity)\",\r\n                }}\r\n              >\r\n                <div className=\"p-0 m-0 d-flex flex-row justify-content-start align-items-start gap-2\">\r\n                  <div>\r\n                    <TbLocationFilled color=\"red\" size={15} />\r\n                  </div>\r\n                  <div className=\"d-flex flex-column justify-content-start align-items-start\">\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"0.875rem\",\r\n                        color: \"grey\",\r\n                        fontWeight: \"800\",\r\n                      }}\r\n                    >\r\n                      {pickupDropOff(routesList, i)}\r\n                    </span>\r\n                    <span style={{ fontSize: `${15 / 16}rem` }}>\r\n                      {route.route_name}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <CloseButton\r\n                    disabled={disableUI}\r\n                    onClick={\r\n                      disableUI\r\n                        ? null\r\n                        : () => {\r\n                            const newRouteList = pickedRoutes.filter(function (\r\n                              item\r\n                            ) {\r\n                              return item !== route;\r\n                            });\r\n                            setPickedRoutes((_) => [...newRouteList]);\r\n                          }\r\n                    }\r\n                  />\r\n                </div>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n          {/*map routes*/}\r\n        </ListGroup>\r\n      );\r\n    }\r\n  };\r\n\r\n  // when search route is clicked\r\n  const getRouteAddress = (place) => {\r\n    placesService?.getDetails(\r\n      {\r\n        placeId: place.place_id,\r\n      },\r\n      (placeDetails) => {\r\n        const loc = {\r\n          route_name: `${place.structured_formatting.main_text} ${place.structured_formatting.secondary_text}`,\r\n          lat: placeDetails.geometry.location.lat(),\r\n          lng: placeDetails.geometry.location.lng(),\r\n        };\r\n        setPickedRoutes((_) => [...pickedRoutes, loc]);\r\n        getPlacePredictions({ input: \"\" });\r\n        searchRouteRef.current.value = \"\";\r\n      }\r\n    );\r\n  };\r\n\r\n  // These are seach items\r\n  // these items will show on the search list\r\n  const seachListItem = (searchList) => {\r\n    //\r\n    if (searchList.length > 0) {\r\n      return searchList.map((route, index) => {\r\n        return (\r\n          <li\r\n            key={index}\r\n            className=\"btn btn-light border-0 w-100 rounded-0 text-dark d-flex flex-row justify-content-start align-items-start text-start gap-2\"\r\n            onClick={() => getRouteAddress(route)}\r\n          >\r\n            <div className=\"p-0 m-0\">\r\n              <HiLocationMarker color=\"red\" />\r\n            </div>\r\n            <span style={{ fontSize: `${14 / 16}rem` }}>\r\n              <strong>{route.structured_formatting.main_text}</strong>{\" \"}\r\n              {route.structured_formatting.secondary_text}\r\n            </span>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  // thi will be displayed when loading search routes\r\n  const searchSuggestions = (isloading) => {\r\n    if (isloading) {\r\n      return (\r\n        <div className=\"w-100 p-2 d-flex flex-row justify-content-center align-items-center\">\r\n          <div className=\"spinner-border text-secondary\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (placePredictions.length > 0) {\r\n      return seachListItem(placePredictions);\r\n    }\r\n    return;\r\n  };\r\n\r\n  //\r\n  const fetchQuoteJob = React.useCallback(async (pk) => {\r\n    // #.... fetching\r\n    modalRef.current?.scrollIntoView({ block: \"nearest\" });\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n    // # ... url\r\n    const url = `quote/job/api/get/${pk}/`;\r\n    await api\r\n      .get(url)\r\n      .then((r) => {\r\n        setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n        if (r.status === 200) setPickedRoutes(() => [...r.data.routes]);\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  }, []);\r\n\r\n  //\r\n  React.useEffect(() => {\r\n    fetchQuoteJob(context.primaryKey);\r\n  }, [context.show]);\r\n  //\r\n  return (\r\n    <Modal\r\n      contentClassName=\"rounded-0\"\r\n      centered={true}\r\n      show={context.show}\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n            }\r\n      }\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        // closeVariant=\"dark\"\r\n        className=\"rounded-0 text-dark border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>Edit routes</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/*NOTIFICATIONS*/}\r\n        {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        {/*NOTIFICATIONS*/}\r\n        {/*List Items*/}\r\n        <Routes routes={pickedRoutes} />\r\n        {/*List Items*/}\r\n        {/*Search*/}\r\n        <Form.Group className={`position-relative mt-3`}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              className=\"fw-bold rounded-0 border-end-0\"\r\n              placeholder=\"Search\"\r\n              ref={searchRouteRef}\r\n              disabled={disableUI}\r\n              onChange={(e) => getPlacePredictions({ input: e.target.value })}\r\n            />\r\n            <InputGroup.Text className=\"bg-white rounded-0\">\r\n              <MdEditLocationAlt color=\"red\" />\r\n            </InputGroup.Text>\r\n          </InputGroup>\r\n          <ul\r\n            className=\"dropdown__shadow mt-2 p-0 shadow-sm w-100 position-absolute bg-white d-flex flex-column justify-content-center align-items-center gap-1\"\r\n            style={{\r\n              listStyle: \"none\",\r\n              zIndex: \"999\",\r\n            }}\r\n          >\r\n            {searchSuggestions(isPlacePredictionsLoading)}\r\n          </ul>\r\n        </Form.Group>\r\n        {/*Search*/}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"rounded-0 border-0\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          className=\"border-0 rounded-0 fw-bold\"\r\n          onClick={async () => await generateDistance(pickedRoutes)}\r\n          disabled={disableUI}\r\n        >\r\n          Select & update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Card, Container } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\n\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\nimport { ENCODE_CREATE_JOB_JWT } from \"../utils/jwt-encode-job\";\r\n// utils\r\nimport { COMPLETE_JOB_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport {\r\n  NOTIFICATION_TYPE,\r\n  ROUTE_DESCRIPTION,\r\n  ROUTE_LINKS,\r\n  // SHUTTLE_SERVICE,\r\n} from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\n\r\n// icons\r\nimport { FiEdit } from \"react-icons/fi\";\r\n// import { TbLocationFilled } from \"react-icons/tb\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\n\r\n//modals\r\nimport { COMPLETE_VEHICLE_SIZE_MODAL } from \"../modals/complete-vehicle-size-modal\";\r\nimport { COMPLETE_ADD_INFO_MODAL } from \"../modals/complete-add-info-modal\";\r\nimport { COMPLETE_ROUTES_MODAL } from \"../modals/complete-routes-modal\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n//\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\nimport { AnimatedButton } from \"../sub-components/animated-button\";\r\nimport {\r\n  DATE_FORMATER,\r\n  TIME_FORMATER,\r\n  CURRENCY_FORMATER,\r\n} from \"../utils/formats\";\r\nimport { JOB_INVOICE_SLIP } from \"../sub-components/quote-invoice-slip\";\r\n//\r\n//\r\nexport default function CustomerCompleteJob() {\r\n  //\r\n  const { pk } = useParams();\r\n\r\n  // navigate\r\n  const navigate = useNavigate();\r\n\r\n  // React UseState Hook\r\n  const [job, setJob] = React.useState({\r\n    return_customer_discount: 0,\r\n    hear_about_us: \"Referral\",\r\n  });\r\n  const [jobLoaded, setJobLoaded] = React.useState(false);\r\n  const [showAdditionalInfoSection, setShowAdditionalInfoSection] =\r\n    React.useState(false);\r\n  const [showRouteSection, setShowRouteSection] = React.useState(false);\r\n  const [showVehicleSizeSection, setShowVehicleSizeSection] =\r\n    React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    //\r\n    const isDisabled =\r\n      type === NOTIFICATION_TYPE.loading ||\r\n      type === NOTIFICATION_TYPE.info ||\r\n      type === NOTIFICATION_TYPE.success;\r\n    // set\r\n    setDisableUI((_) => isDisabled);\r\n  };\r\n\r\n  // display routes new\r\n  const DisplayRoutes = ({ vJob }) => {\r\n    return (\r\n      <div className=\"mx-3 my-2\">\r\n        {/*routes*/}\r\n        <table className=\"table table-secondary table-striped table-bordered m-0\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Routes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {vJob.routes.map((route, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <div className=\"d-flex flex-column\">\r\n                      <span className=\"form-text fw-bold\">\r\n                        {index + 1} - {ROUTE_DESCRIPTION[route.description]}\r\n                      </span>\r\n                      <span>{route.route_name}</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {/*routes*/}\r\n        {/*table*/}\r\n        <table\r\n          className={`table table-striped table-bordered table-secondary m-0 mt-2`}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Qty</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Distance</td>\r\n              <td>{`${job.distance} km`}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/*table*/}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DisplayAdditionalInformation = ({ vJob }) => {\r\n    // check if loaded first\r\n    if (vJob.job_date && vJob.job_time) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"pt-2\">\r\n            {/* <DriverNote leading={\"Driver note\"} trailing={vJob.driver_note} /> */}\r\n          </div>\r\n\r\n          {/*driver note */}\r\n          <div className=\"px-3 pt-2 pb-2\">\r\n            <table\r\n              className={`table table-striped table-bordered table-secondary m-0`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Job date</td>\r\n                  <td>{DATE_FORMATER.format(new Date(`${vJob.job_date}`))}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Job time</td>\r\n                  <td>\r\n                    {TIME_FORMATER.format(\r\n                      new Date(`${vJob.job_date} ${vJob.job_time}`)\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Payment option</td>\r\n                  <td>{`${job.payment_option}`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Helpers</td>\r\n                  <td>{`${job.helpers}`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Floors</td>\r\n                  <td>{`${job.floors}`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Driver note</td>\r\n                  <td>{`${job.driver_note}`}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n  // section vehicle size\r\n  const JobSection = ({\r\n    leading,\r\n    onClick,\r\n    showIcon = true,\r\n    disableButton = false,\r\n  }) => {\r\n    return (\r\n      <React.Fragment>\r\n        <AnimatedButton\r\n          onClick={disableButton ? null : () => onClick((_) => true)}\r\n        >\r\n          <div className=\"bg-secondary bg-opacity-75 px-3 py-2 d-flex flex-row justify-content-between align-items-start gap-1\">\r\n            <span\r\n              className={`text-white`}\r\n              style={{ fontWeight: \"900\", fontSize: `${18 / 16}rem` }}\r\n            >\r\n              {leading}\r\n            </span>\r\n            {showIcon ? (\r\n              <div>\r\n                <FiEdit color=\"white\" />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </AnimatedButton>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // loadJob\r\n  const LoadJob = ({ job_quote, loaded }) => {\r\n    // console.log(verifiedJob);\r\n    if (loaded) {\r\n      return (\r\n        <React.Fragment>\r\n          {/*section vehicle Size*/}\r\n          <JobSection\r\n            leading={\"Job vehicle type\"}\r\n            onClick={setShowVehicleSizeSection}\r\n            disableButton={disableUI}\r\n          />\r\n          {/*section vehicle Size*/}\r\n          {/* \r\n          {jobSection(true, disableUI)} */}\r\n          <div className=\"my-2 px-3\">\r\n            <table\r\n              className={`table table-striped table-bordered table-secondary m-0`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Vehicle size</td>\r\n                  <td>{`${job_quote.vehicle_size} Ton`}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/*section vehicle Size*/}\r\n          {/*section Routes */}\r\n          <JobSection\r\n            leading={\"Job routes\"}\r\n            onClick={setShowRouteSection}\r\n            disableButton={disableUI}\r\n          />\r\n\r\n          <DisplayRoutes vJob={job_quote} />\r\n          {/* <DisplayJobRoutes job={job} /> */}\r\n          {/* {displayRoutes(verifiedJob.routes)} */}\r\n          {/*section Routes */}\r\n          {/*additional information*/}\r\n\r\n          <div className=\"mb-3\">\r\n            <JobSection\r\n              leading={\"Job add-info \"}\r\n              onClick={setShowAdditionalInfoSection}\r\n              disableButton={disableUI}\r\n            />\r\n            <DisplayAdditionalInformation vJob={job_quote} />\r\n          </div>\r\n          {/*additional information*/}\r\n          {/*Quote*/}\r\n          <JOB_INVOICE_SLIP job={job_quote} />\r\n          {/*Quote*/}\r\n          {/*BUtton*/}\r\n          <div className=\"w-100 mt-3 pb-3 pe-3 d-flex flex-row justify-content-end align-items-center\">\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              className=\"fw-bold border-0 rounded-0 d-flex flex-row justify-content-center align-items-center gap-2\"\r\n              disabled={disableUI}\r\n              onClick={async () => createJobFunction(job_quote)}\r\n            >\r\n              Book\r\n              <FaCheck />\r\n            </Button>\r\n          </div>\r\n          {/*BUtton*/}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return <></>;\r\n  };\r\n\r\n  // load modals\r\n  const loadModals = (loaded, pk) => {\r\n    if (loaded) {\r\n      return (\r\n        <React.Fragment>\r\n          {/*Additional Info*/}\r\n          <COMPLETE_JOB_CONTEXT.Provider\r\n            value={{\r\n              primaryKey: pk,\r\n              show: showAdditionalInfoSection,\r\n              setShow: setShowAdditionalInfoSection,\r\n            }}\r\n          >\r\n            <COMPLETE_ADD_INFO_MODAL />\r\n          </COMPLETE_JOB_CONTEXT.Provider>\r\n          {/*Additional Info\r\n          {/*Vehicle size*/}\r\n          <COMPLETE_JOB_CONTEXT.Provider\r\n            value={{\r\n              primaryKey: pk,\r\n              show: showVehicleSizeSection,\r\n              setShow: setShowVehicleSizeSection,\r\n            }}\r\n          >\r\n            <COMPLETE_VEHICLE_SIZE_MODAL />\r\n          </COMPLETE_JOB_CONTEXT.Provider>\r\n          {/*Vehicle size*/}\r\n          {/*edit routes*/}\r\n          <COMPLETE_JOB_CONTEXT.Provider\r\n            value={{\r\n              primaryKey: pk,\r\n              show: showRouteSection,\r\n              setShow: setShowRouteSection,\r\n            }}\r\n          >\r\n            <COMPLETE_ROUTES_MODAL />\r\n          </COMPLETE_JOB_CONTEXT.Provider>\r\n          {/*edit routes*/}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  // create Job\r\n  const createJobFunction = React.useCallback(async (payload) => {\r\n    // set notification\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Creating ...\", \"\");\r\n    // check if you are logged in\r\n    const [isLoggedin, _] = IS_LOGGED_IN();\r\n    // check if this person is logged in\r\n    if (isLoggedin) {\r\n      // const url\r\n      const url = \"jobs/api/job/create/\";\r\n      await api\r\n        .post(url, payload)\r\n        .then(async (r) => {\r\n          setNotification(NOTIFICATION_TYPE.success, \"Awesome.\", \"Created\");\r\n          await AwaitCallBack(() => {\r\n            let anchor = window.document.createElement(\"a\");\r\n            anchor.href = ROUTE_LINKS.jobs;\r\n            anchor.target = \"_self\";\r\n            anchor.click();\r\n          }, 2000);\r\n        })\r\n        .catch((e) => ErrorHandling(e, setNotification));\r\n    } else {\r\n      // otherwise\r\n      const message =\r\n        \"To complete this job, you must be signed in. we'll navigate you to the sign-in page.\";\r\n      setNotification(\r\n        NOTIFICATION_TYPE.info,\r\n        \"Dear valued customer. \",\r\n        message\r\n      );\r\n      // sleep\r\n      await AwaitCallBack(() => navigate(ROUTE_LINKS.signin), 6000);\r\n    }\r\n  }, []);\r\n  // retrieve\r\n  const saveAndRetrieveJobComplete = React.useCallback(async (primary_key) => {\r\n    // fetching\r\n    setJobLoaded((_) => false);\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n\r\n    // set url\r\n    const url = `quote/job/api/get/${primary_key}/`;\r\n    await api\r\n      .get(url)\r\n      .then(async (r) => {\r\n        // verify status\r\n        if (r.status === 200) {\r\n          // resolve to respective components\r\n          const v_size = Number(r.data.vehicle_size).toFixed(1);\r\n          const payload = { ...r.data, vehicle_size: v_size };\r\n          //set\r\n          setJob((_) => {\r\n            return { ...job, ...payload };\r\n          });\r\n          ENCODE_CREATE_JOB_JWT(payload);\r\n          setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n          setJobLoaded((_) => true);\r\n        }\r\n      })\r\n      .catch((e) => ErrorHandling(e, setNotification));\r\n  }, []);\r\n\r\n  //\r\n  React.useEffect(() => {\r\n    // save locally\r\n    saveAndRetrieveJobComplete(pk);\r\n    //\r\n  }, [pk]);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [notificationType]);\r\n  //\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3 px-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0 \">\r\n          <Card.Header className=\"text-white bg-secondary rounded-0 border-0 py-2\">\r\n            <div className=\"d-flex flex-column justify-content-center align-items-start\">\r\n              <span style={{ fontWeight: \"900\" }}>CREATE JOB</span>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            {/*NOTIFICATIONS*/}\r\n            {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n            {/*NOTIFICATIONS*/}\r\n            {/*Load Job*/}\r\n            <LoadJob job_quote={job} loaded={jobLoaded} />\r\n            {/*LOad Job*/}\r\n          </Card.Body>\r\n        </Card>\r\n        {/*Modals*/}\r\n        {loadModals(jobLoaded, pk)}\r\n        {/*Modals*/}\r\n      </Container>\r\n      <VerticalSpacer height={`${window.innerHeight / 2}px`} />\r\n    </motion.section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, OverlayTrigger, Popover } from \"react-bootstrap\";\r\n\r\nimport { BsInfoCircle as InfoIcon } from \"react-icons/bs\";\r\n// import { FaInfoCircle as InfoIcon } from \"react-icons/fa\";\r\n\r\nimport {\r\n  AMOUNT_DUE,\r\n  BASE_AMOUNT,\r\n  EXTRA_DISCOUNT,\r\n  OFFPEAK,\r\n  PRICE_ADJUSTMENT,\r\n  RETURN_CUSTOMER,\r\n} from \"../utils/strings\";\r\nimport { AnimatedButton } from \"./animated-button\";\r\n\r\n// export export\r\nexport function JOB_INVOICE_SLIP({ job, padding = \"p-3\" }) {\r\n  // format\r\n  const formater = Intl.NumberFormat(\"en-ZA\", {\r\n    style: \"currency\",\r\n    currency: \"zar\",\r\n    minimumSignificantDigits: 1,\r\n  });\r\n\r\n  //const popover\r\n  const popover = (body) => {\r\n    return (\r\n      <Popover\r\n        id=\"popover-basic\"\r\n        className=\"rounded-0 border-secondary\"\r\n        arrowProps={{ style: { backgroundColor: \"red\" } }}\r\n      >\r\n        <Popover.Body className=\"text-secondary fw-bold rounded-0\">\r\n          {body}\r\n        </Popover.Body>\r\n      </Popover>\r\n    );\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Card className=\"dropdown__shadow rounded-0 border-0\">\r\n      <Card.Body className={`${padding}`}>\r\n        {/*table*/}\r\n        <table className={`table table-bordered table-striped table-dark m-0`}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Price(ZAR)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Base fee</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${BASE_AMOUNT}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>{`${formater.format(job.base_fee)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Off peak</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${OFFPEAK}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.mid_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.mid_discount)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Return customer</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${RETURN_CUSTOMER}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.return_customer_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.return_customer_discount)}`}</td>\r\n            </tr>\r\n            {/*extra discount*/}\r\n            {job.give_extra_discount ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <span>Extra discount</span>\r\n                    <AnimatedButton className=\"px-1\">\r\n                      <OverlayTrigger\r\n                        trigger=\"click\"\r\n                        placement=\"top\"\r\n                        rootClose={true}\r\n                        overlay={popover(`${EXTRA_DISCOUNT}`)}\r\n                      >\r\n                        <div>\r\n                          <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                        </div>\r\n                      </OverlayTrigger>\r\n                    </AnimatedButton>\r\n                  </div>\r\n                </td>\r\n                <td className=\"text-danger\">{`${\r\n                  job.give_extra_discount ? \"-\" : \"\"\r\n                } ${formater.format(job.extra_discount)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n            {job.set_price_adjustment ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <div className=\"d-flex flex-row\">\r\n                      <span>Price adjustment</span>\r\n                      <AnimatedButton className=\"px-1\">\r\n                        <OverlayTrigger\r\n                          trigger=\"click\"\r\n                          placement=\"top\"\r\n                          rootClose={true}\r\n                          overlay={popover(`${PRICE_ADJUSTMENT}`)}\r\n                        >\r\n                          <div>\r\n                            <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                      </AnimatedButton>\r\n                    </div>\r\n                    <span className=\"text-muted form-text fw-bold border border-2 px-1 bg-light\">\r\n                      Price adjustment justification:{\" \"}\r\n                      <span className=\"text-dark\">\r\n                        {job.price_adjustment_justification}\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>{`${formater.format(job.price_adjustment)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span style={{ fontWeight: \"900\" }}>Amount due</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${AMOUNT_DUE}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"900\",\r\n                    fontSize: `${20 / 16}rem`,\r\n                  }}\r\n                >\r\n                  {formater.format(job.amount_due).replace(\"ZA\", \"\")}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        {/*table*/}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// create context\r\nexport const REQUEST_SIGNIN_CONTEXT = React.createContext();\r\nexport const REQUEST_GOOGLE_SIGNIN_CONTEXT = React.createContext();\r\nexport const CREATE_JOB_CONTEXT = React.createContext();\r\nexport const UPDATE_JOB_CONTEXT = React.createContext();\r\nexport const COMPLETE_JOB_CONTEXT = React.createContext();\r\nexport const JOB_NOTIFICATION_CONTEXT = React.createContext();\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n","// formaters\r\nexport const DATE_FORMATER = Intl.DateTimeFormat(\"en-ZA\", {\r\n  weekdays: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n});\r\n\r\n// time formater\r\nexport const TIME_FORMATER = Intl.DateTimeFormat(\"en-Za\", {\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  // second: \"numeric\",\r\n  timeZone: \"Africa/Harare\",\r\n  timeZoneName: \"short\",\r\n});\r\n\r\nexport const CURRENCY_FORMATER = Intl.NumberFormat(\"en-ZA\", {\r\n  style: \"currency\",\r\n  currency: \"zar\",\r\n  minimumSignificantDigits: 1,\r\n});\r\n","import jwt_encode from \"jwt-encode\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// encode\r\nexport function ENCODE_CREATE_JOB_JWT(data) {\r\n  // const\r\n  const secretKey = \"xcrossinglines\";\r\n  const jwt = jwt_encode(data, secretKey);\r\n\r\n  // save the jwt locally\r\n  localStorage.setItem(\"create-job\", JSON.stringify(jwt));\r\n}\r\n\r\n//\r\n// check if jwt_encoded version exists\r\nexport function GET_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      // then return with\r\n      const decodedPayload = jwt_decode(createJob);\r\n      return [true, decodedPayload];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n\r\n//\r\n//\r\nexport function RETRIEVE_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      return [true, createJob];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n\r\n// get complete jwt job\r\nexport function GET_VERIFIED_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      // then return with\r\n      const decodedPayload = jwt_decode(createJob);\r\n      // verify\r\n      if (\r\n        decodedPayload.vehicle_size &&\r\n        decodedPayload.distance &&\r\n        decodedPayload.helpers\r\n      ) {\r\n        //\r\n        return [true, decodedPayload];\r\n      }\r\n      return [false, {}];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n"],"names":["COMPLETE_VEHICLE_SIZE_MODAL","context","React","COMPLETE_JOB_CONTEXT","modalRef","selectedVehicle","setSelectedVehicle","disableUI","setDisableUI","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","fetchQuoteJob","async","_modalRef$current2","current","scrollIntoView","block","url","concat","pk","api","then","r","status","setVehicleType","data","catch","e","ErrorHandling","vSize","vsize","VEHICLE_TYPE","item","size","VChecked","selected","payload","index","jobVSize","Number","vehicle_size","toFixed","primaryKey","show","_jsxs","Modal","centered","contentClassName","onHide","setShow","children","_jsx","ref","closeButton","className","style","fontWeight","NOTIFICATIONS","Carousel","activeIndex","controls","indicators","v","i","src","img","alt","AnimatedButton","Form","disabled","value","checked","onClick","fontSize","description","onChange","Button","variant","_modalRef$current","vType","AwaitCallBack","window","location","href","updateVehicleSize","COMPLETE_ADD_INFO_MODAL","driverNoteRef","startDateTime","setStartDateTime","Date","additionalHelpers","setAdditionalHelpers","floorsToCarry","setFloorsToCarry","shuttle","setShuttle","disableShuttling","setDisableShuttling","paymentOption","setPaymentOption","driverNote","setDriverNote","dateBorderColor","setDateBorderColor","addHelpers","Array","fill","carryFloors","disableUserInterface","plurify","singular","plural","validateDateTime","dateTime","now","DATETIME_ERROR_MESSAGE","dateYear","getFullYear","dateMonth","getMonth","dateDay","getDate","timeHour","getHours","timeMinute","getMinutes","timeSeconds","getSeconds","jobDate","jobTime","updateAddInfo","job_date","job_time","helpers","floors","payment_option","driver_note","setAddInfo","_modalRef$current3","verifyDisabledShuttlingField","sType","onEntered","DatePicker","startDate","minDate","showTimeSelect","showPopperArrow","dateFormat","timeFormat","calendarClassName","onFocus","target","readOnly","Dropdown","map","id","length","currentTarget","toLowerCase","toUpperCase","required","placeholder","COMPLETE_ROUTES_MODAL","searchRouteRef","pickedRoutes","setPickedRoutes","placesService","placePredictions","getPlacePredictions","isPlacePredictionsLoading","usePlacesService","apiKey","GOOGLE_API_KEY","debounce","options","componentRestrictions","country","disable","pickupDropOff","list","generateDistance","routes","routeList","updateRoutes","distance","Routes","_ref","route","route_name","newRouteList","filter","seachListItem","searchList","getRouteAddress","place","getDetails","placeId","place_id","placeDetails","loc","structured_formatting","main_text","secondary_text","lat","geometry","lng","input","HiLocationMarker","color","InputGroup","MdEditLocationAlt","listStyle","zIndex","isloading","role","CustomerCompleteJob","useParams","navigate","useNavigate","job","setJob","return_customer_discount","hear_about_us","jobLoaded","setJobLoaded","showAdditionalInfoSection","setShowAdditionalInfoSection","showRouteSection","setShowRouteSection","showVehicleSizeSection","setShowVehicleSizeSection","isDisabled","DisplayRoutes","vJob","scope","ROUTE_DESCRIPTION","DisplayAdditionalInformation","_ref2","DATE_FORMATER","TIME_FORMATER","JobSection","_ref3","showIcon","disableButton","FiEdit","LoadJob","_ref4","job_quote","loaded","JOB_INVOICE_SLIP","createJobFunction","FaCheck","_Fragment","isLoggedin","IS_LOGGED_IN","anchor","document","createElement","ROUTE_LINKS","click","message","saveAndRetrieveJobComplete","primary_key","v_size","ENCODE_CREATE_JOB_JWT","scrollTo","motion","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","Container","Card","loadModals","VerticalSpacer","height","innerHeight","padding","formater","Intl","NumberFormat","currency","minimumSignificantDigits","popover","body","Popover","arrowProps","backgroundColor","OverlayTrigger","trigger","placement","rootClose","overlay","BASE_AMOUNT","InfoIcon","format","base_fee","OFFPEAK","mid_discount","RETURN_CUSTOMER","give_extra_discount","EXTRA_DISCOUNT","extra_discount","set_price_adjustment","PRICE_ADJUSTMENT","price_adjustment_justification","price_adjustment","AMOUNT_DUE","amount_due","replace","REQUEST_SIGNIN_CONTEXT","REQUEST_GOOGLE_SIGNIN_CONTEXT","CREATE_JOB_CONTEXT","UPDATE_JOB_CONTEXT","JOB_NOTIFICATION_CONTEXT","STATUS","response","msg","statuscode","detail","email","request","DateTimeFormat","weekdays","year","month","day","hour","minute","timeZone","timeZoneName","jwt","jwt_encode","localStorage","setItem","JSON","stringify","GET_JWT_JOB","createJob","parse","getItem","jwt_decode","error","GET_VERIFIED_JWT_JOB","decodedPayload"],"sourceRoot":""}