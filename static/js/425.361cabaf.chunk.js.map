{"version":3,"file":"static/js/425.361cabaf.chunk.js","mappings":"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","sources":["components/pages/profile.jsx","components/utils/status.jsx","components/utils/error-handling.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS } from \"../utils/strings\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\n\r\n//utils\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// import\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\n// profile\r\nexport default function Profile() {\r\n  // ref\r\n  const emailRef = React.useRef();\r\n  const fullNameRef = React.useRef();\r\n  const familyNameRef = React.useRef();\r\n  const phoneNumberRef = React.useRef();\r\n\r\n  // React\r\n  const [userAccount, setUserAccount] = React.useState({\r\n    email: \"\",\r\n    f_name: \"\",\r\n    m_number: \"\",\r\n    s_name: \"\",\r\n  });\r\n  const [validated, setValidated] = React.useState(false);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // verify everythong\r\n  // const verifyAndPopulate = () => {\r\n  //   //\r\n  //   if (fullNameRef.current.value) {\r\n  //     familyNameRef.current.value = familyNameRef.current.value\r\n  //       ? familyNameRef.current.value\r\n  //       : userAccount.s_name;\r\n\r\n  //     phoneNumberRef.current.value = phoneNumberRef.current.value\r\n  //       ? phoneNumberRef.current.value\r\n  //       : userAccount.m_number;\r\n  //   } else if (familyNameRef.current.value) {\r\n  //     fullNameRef.current.value = fullNameRef.current.value\r\n  //       ? fullNameRef.current.value\r\n  //       : userAccount.f_name;\r\n  //     phoneNumberRef.current.value = phoneNumberRef.current.value\r\n  //       ? phoneNumberRef.current.value\r\n  //       : userAccount.m_number;\r\n  //   } else if (phoneNumberRef.current.value) {\r\n  //     fullNameRef.current.value = fullNameRef.current.value\r\n  //       ? fullNameRef.current.value\r\n  //       : userAccount.f_name;\r\n\r\n  //     familyNameRef.current.value = familyNameRef.current.value\r\n  //       ? familyNameRef.current.value\r\n  //       : userAccount.s_name;\r\n  //   }\r\n  // };\r\n\r\n  const handleSubmit = async (event) => {\r\n    //\r\n    // verifyAndPopulate();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n\r\n    // setpayload\r\n    const payload = {\r\n      f_name: fullNameRef.current.value,\r\n      s_name: familyNameRef.current.value,\r\n      m_number: phoneNumberRef.current.value,\r\n    };\r\n    await updateProfile(payload);\r\n  };\r\n\r\n  // const update Profile\r\n  const updateProfile = async (payload) => {\r\n    //\r\n    const [verify, __] = IS_LOGGED_IN();\r\n    if (verify) {\r\n      //setloading\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Updating Profile ...\", \"\");\r\n\r\n      // url\r\n      const url = \"accounts/api/account/update/\";\r\n      await api\r\n        .put(url, payload)\r\n        .then(async (r) => {\r\n          setNotification(\r\n            NOTIFICATION_TYPE.success,\r\n            \"Awesome.\",\r\n            \"Update success\"\r\n          );\r\n          // sleep\r\n          await AwaitCallBack(() => {\r\n            let anchor = window.document.createElement(\"a\");\r\n            anchor.href = ROUTE_LINKS.profile;\r\n            anchor.target = \"_self\";\r\n            anchor.click();\r\n          }, 2000);\r\n        })\r\n        .catch((e) => {\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n    }\r\n  };\r\n\r\n  //fetch profile\r\n  const fetchingProfile = React.useCallback(async () => {\r\n    //\r\n    const [verify, tokens] = IS_LOGGED_IN();\r\n    if (verify) {\r\n      //setloading\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Fetching Profile ...\", \"\");\r\n\r\n      // url\r\n      const url = \"accounts/api/account/get/\";\r\n      await api\r\n        .get(url)\r\n        .then((r) => {\r\n          //ccheck status\r\n          if (r.status === 200) {\r\n            //\r\n            setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n            // set payloadW\r\n            setProfileFields(r);\r\n            setUserAccount((_) => {\r\n              return {\r\n                email: r.data.email,\r\n                f_name: r.data.f_name,\r\n                m_number: r.data.m_number,\r\n                s_name: r.data.s_name,\r\n              };\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n      return;\r\n    }\r\n    // otherwise\r\n    window.location.href = ROUTE_LINKS.home;\r\n    return;\r\n  }, []);\r\n\r\n  // set also fields\r\n  const setProfileFields = (response) => {\r\n    // response\r\n    if (response) {\r\n      emailRef.current.value = response.data.email;\r\n      fullNameRef.current.value = response.data.f_name;\r\n      familyNameRef.current.value = response.data.s_name;\r\n      phoneNumberRef.current.value = response.data.m_number;\r\n      return;\r\n    }\r\n  };\r\n\r\n  // React useEffect\r\n  React.useEffect(\r\n    (_) => {\r\n      window.scrollTo(0, 0);\r\n      fetchingProfile();\r\n    },\r\n    [fetchingProfile]\r\n  );\r\n\r\n  // to scroll up\r\n  React.useEffect(\r\n    (_) => {\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [notificationType]\r\n  );\r\n  //\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0\">\r\n          <Card.Header\r\n            as=\"h3\"\r\n            className=\"text-center pb-0 bg-transparent border-0 \"\r\n            style={{ fontWeight: \"900\" }}\r\n          >\r\n            Your profile\r\n          </Card.Header>\r\n          {/*Form*/}\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Card.Body>\r\n              {/*NOTIFICATIONS*/}\r\n              {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n              {/*NOTIFICATIONS*/}\r\n\r\n              {/*Email*/}\r\n              <Form.Group\r\n                className={`mb-3 mt-${\r\n                  notificationType === NOTIFICATION_TYPE.none ? \"0\" : \"3\"\r\n                }`}\r\n              >\r\n                <Form.FloatingLabel\r\n                  label=\"Email\"\r\n                  className=\"fw-bold\"\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    ref={emailRef}\r\n                    className=\"rounded-0 border-0 fw-bold\"\r\n                    type=\"email\"\r\n                    disabled={true}\r\n                    readOnly={true}\r\n                    required={false}\r\n                    placeholder={`${userAccount.email}`}\r\n                  />\r\n                </Form.FloatingLabel>\r\n                <div className=\"text-end\">\r\n                  <Form.Text>Contact admin.</Form.Text>\r\n                </div>\r\n              </Form.Group>\r\n              {/*Email*/}\r\n              {/*Full Name*/}\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.FloatingLabel\r\n                  className=\"fw-bold\"\r\n                  label={`Full name: ${userAccount.f_name}`}\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"fw-bold rounded-0\"\r\n                    placeholder={`${userAccount.f_name}`}\r\n                    disabled={disableUI}\r\n                    ref={fullNameRef}\r\n                    required={true}\r\n                    type=\"text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter correct full name to continue\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback> Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </Form.Group>\r\n              {/*Full Name*/}\r\n              {/*Family Name*/}\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.FloatingLabel\r\n                  className=\"fw-bold\"\r\n                  label={`Family name: ${userAccount.s_name}`}\r\n                  style={{\r\n                    color: \"grey\",\r\n                  }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"fw-bold rounded-0\"\r\n                    disabled={disableUI}\r\n                    placeholder={`${userAccount.s_name}`}\r\n                    ref={familyNameRef}\r\n                    required={true}\r\n                    type=\"text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter correct family name to continue\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </Form.Group>\r\n              {/*Family Name*/}\r\n              {/*Phone Number*/}\r\n              <Form.Group>\r\n                <Form.FloatingLabel\r\n                  className=\"fw-bold\"\r\n                  label={`Phone number: ${userAccount.m_number}`}\r\n                  style={{ color: \"grey\" }}\r\n                >\r\n                  <Form.Control\r\n                    className=\"fw-bold rounded-0\"\r\n                    placeholder={`${userAccount.m_number}`}\r\n                    disabled={disableUI}\r\n                    ref={phoneNumberRef}\r\n                    required={true}\r\n                    maxLength={10}\r\n                    minLength={10}\r\n                    type=\"tel\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter correct phone number to continue\r\n                  </Form.Control.Feedback>\r\n                  <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n                </Form.FloatingLabel>\r\n              </Form.Group>\r\n              {/*Phone Number*/}\r\n            </Card.Body>\r\n            <Card.Footer className=\"px-0 mx-3 pt-1 pb-3 border-0 bg-transparent d-flex flex-row justify-content-end align-items-center p-3\">\r\n              {/*Button*/}\r\n              <Button\r\n                disabled={disableUI}\r\n                variant=\"outline-primary\"\r\n                className=\"rounded-0 border-0 fw-bold\"\r\n                type=\"submit\"\r\n              >\r\n                Update\r\n              </Button>\r\n              {/*Button*/}\r\n            </Card.Footer>\r\n          </Form>\r\n          {/*Form*/}\r\n        </Card>\r\n      </Container>\r\n      <VerticalSpacer height={`${window.innerHeight / 2}px`} />\r\n    </motion.section>\r\n  );\r\n}\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n"],"names":["Profile","emailRef","React","fullNameRef","familyNameRef","phoneNumberRef","userAccount","setUserAccount","email","f_name","m_number","s_name","validated","setValidated","disableUI","setDisableUI","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","disable","updateProfile","async","verify","__","IS_LOGGED_IN","url","api","payload","then","AwaitCallBack","anchor","window","document","createElement","href","ROUTE_LINKS","target","click","catch","e","ErrorHandling","fetchingProfile","tokens","r","status","setProfileFields","data","location","response","current","value","scrollTo","_jsxs","motion","className","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","children","_jsx","Container","Card","as","style","fontWeight","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","NOTIFICATIONS","concat","label","color","ref","disabled","readOnly","required","placeholder","maxLength","minLength","Button","variant","VerticalSpacer","height","innerHeight","STATUS","msg","statuscode","detail","request","message"],"sourceRoot":""}