{"version":3,"file":"static/js/144.7cdd7a10.chunk.js","mappings":"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","sources":["components/pages/reset-password.jsx","components/utils/status.jsx","components/utils/error-handling.jsx","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Card, Container, Form, InputGroup } from \"react-bootstrap\";\r\nimport { VerticalSpacer } from \"../sub-components/vertical-spacer\";\r\nimport { useParams } from \"react-router\";\r\n\r\n// utils\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS } from \"../utils/strings\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\n\r\n// icons\r\nimport api from \"../utils/api\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// import\r\nimport { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../utils/animation-variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../utils/numerics\";\r\n\r\n// export\r\nexport default function ResetPassword() {\r\n  //\r\n  const { token } = useParams();\r\n  // ref\r\n  const passwordRef = React.useRef();\r\n  const reEnterPassword = React.useRef();\r\n  //\r\n\r\n  const [passwordsMatch, setPasswordsMatch] = React.useState(true);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [validated, setValidated] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.none\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // password match witdget\r\n  const PasswordMatch = ({ password_match }) => {\r\n    // check if password matchs\r\n    if (!password_match)\r\n      return (\r\n        <Form.Text className=\"fw-bold text-danger\">\r\n          Oops! passwords do not match\r\n        </Form.Text>\r\n      );\r\n    // otherwise\r\n    return <></>;\r\n  };\r\n\r\n  //\r\n  const verifyPasswordMatch = async (passwordOne, passwordTwo, callback) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (`${passwordOne}` === `${passwordTwo}`) resolve(\"Passwords match\");\r\n      reject(\"Passwords do not match\");\r\n    })\r\n      .then(async (r) => {\r\n        setPasswordsMatch(() => true);\r\n        await callback();\r\n      })\r\n      .catch((e) => {\r\n        setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n        setPasswordsMatch(() => false);\r\n      });\r\n  };\r\n\r\n  // function\r\n  const handleSubmit = async (event) => {\r\n    // verify\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n    await verifyPasswordMatch(\r\n      passwordRef.current.value,\r\n      reEnterPassword.current.value,\r\n      async () => {\r\n        //accounts/api/account/password/reset/confirm/\r\n        await resetPassword({\r\n          token: token,\r\n          password: passwordRef.current.value,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  //\r\n  const resetPassword = React.useCallback(async (payload) => {\r\n    // notify\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Resetting Password ...\", \"\");\r\n\r\n    // url\r\n    const url = \"accounts/api/account/password/reset/confirm/\";\r\n    await api\r\n      .post(url, payload)\r\n      .then(async (r) => {\r\n        // check status\r\n        if (r.status === 200) {\r\n          setNotification(\r\n            NOTIFICATION_TYPE.success,\r\n            \"Awesome.\",\r\n            \"Password successfully reset\"\r\n          );\r\n\r\n          // sleep\r\n          await AwaitCallBack(\r\n            () => (window.location.href = ROUTE_LINKS.signin),\r\n            2000\r\n          );\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        ErrorHandling(e, setNotification);\r\n      });\r\n  }, []);\r\n\r\n  //\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [resetPassword]);\r\n\r\n  // return\r\n  return (\r\n    <motion.section\r\n      className=\"pb-3\"\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      <Container className=\"p-0 d-flex flex-column justify-content-center align-items-center\">\r\n        <Card className=\"dropdown__shadow card__section border-0 rounded-0 \">\r\n          {/*Form*/}\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Card.Header\r\n              as=\"h3\"\r\n              className=\"text-center pb-0 bg-transparent border-0\"\r\n              style={{ fontWeight: \"900\" }}\r\n            >\r\n              Reset Password\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {/*NOTIFICATIONS*/}\r\n              {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n              {/*NOTIFICATIONS*/}\r\n\r\n              {/*New Password*/}\r\n              <Form.Group\r\n                className={`mb-2 mt-${\r\n                  notificationType === NOTIFICATION_TYPE.none ? \"0\" : \"3\"\r\n                }`}\r\n              >\r\n                <InputGroup>\r\n                  <Form.FloatingLabel\r\n                    label=\"New password\"\r\n                    className=\"fw-bold \"\r\n                    style={{ color: \"grey\" }}\r\n                  >\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      required={true}\r\n                      ref={passwordRef}\r\n                      minLength={6}\r\n                      maxLength={18}\r\n                      disabled={disableUI}\r\n                      className=\"rounded-0 fw-bold\"\r\n                      placeholder=\"New password\"\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter correct new password.\r\n                    </Form.Control.Feedback>\r\n                    <PasswordMatch password_match={passwordsMatch} />\r\n                  </Form.FloatingLabel>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/*New Password*/}\r\n              {/*Re-enter new password*/}\r\n              <Form.Group className=\"mb-3\">\r\n                <InputGroup>\r\n                  <Form.FloatingLabel\r\n                    label=\"Re-enter new password\"\r\n                    className=\"fw-bold \"\r\n                    style={{ color: \"grey\" }}\r\n                  >\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      required={true}\r\n                      ref={reEnterPassword}\r\n                      minLength={6}\r\n                      maxLength={18}\r\n                      disabled={disableUI}\r\n                      className=\"rounded-0 fw-bold\"\r\n                      placeholder=\"Re-enter new password\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter correct re-enter password.\r\n                    </Form.Control.Feedback>\r\n                    <PasswordMatch password_match={passwordsMatch} />\r\n                  </Form.FloatingLabel>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/*Re-enter new password*/}\r\n            </Card.Body>\r\n            <Card.Footer className=\"bg-white border-0 pt-0 pb-3\">\r\n              <Button\r\n                variant=\"primary\"\r\n                disabled={disableUI}\r\n                className=\"w-100 text-white border-0 rounded-0 border-0 fw-bold\"\r\n                type=\"submit\"\r\n              >\r\n                Reset password\r\n              </Button>\r\n            </Card.Footer>\r\n          </Form>\r\n          {/*Form*/}\r\n        </Card>\r\n      </Container>\r\n      <VerticalSpacer height={`${window.innerHeight / 2}px`} />\r\n    </motion.section>\r\n  );\r\n}\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;"],"names":["ResetPassword","token","useParams","passwordRef","React","reEnterPassword","passwordsMatch","setPasswordsMatch","disableUI","setDisableUI","validated","setValidated","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","disable","PasswordMatch","_ref","password_match","_jsx","_Fragment","Form","className","children","resetPassword","async","api","payload","then","r","status","AwaitCallBack","window","location","href","ROUTE_LINKS","catch","e","ErrorHandling","scrollTo","_jsxs","motion","variants","PAGES_VARIANT","animate","initial","exit","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY","Container","Card","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","passwordOne","passwordTwo","callback","Promise","resolve","reject","concat","verifyPasswordMatch","current","value","password","as","style","fontWeight","NOTIFICATIONS","InputGroup","label","color","required","ref","minLength","maxLength","disabled","placeholder","Button","variant","VerticalSpacer","height","innerHeight","STATUS","response","msg","statuscode","data","detail","email","request","message","InputGroupText","createWithBsPrefix","Component","bsPrefix","size","hasValidation","props","useBootstrapPrefix","contextValue","useMemo","InputGroupContext","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","Checkbox","context"],"sourceRoot":""}