{"version":3,"file":"static/js/277.00df1cd1.chunk.js","mappings":"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","sources":["components/modals/app-modals.jsx","components/modals/job-notification-modal.jsx","components/sub-components/divider.jsx","components/sub-components/quote-invoice-slip.jsx","components/utils/contexts.jsx","components/utils/status.jsx","components/utils/error-handling.jsx","components/utils/formats.jsx","components/utils/jwt-encode-job.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS } from \"../utils/strings\";\r\nimport api from \"../utils/api\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\n\r\n// context\r\nimport { REQUEST_SIGNIN_CONTEXT } from \"../utils/contexts\";\r\nimport { REQUEST_GOOGLE_SIGNIN_CONTEXT } from \"../utils/contexts\";\r\n\r\n// pdf\r\nimport TermsAndConditions from \"../../pdf/TermsAndConditions.pdf\";\r\nimport { GET_VERIFIED_JWT_JOB } from \"../utils/jwt-encode-job\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// Request Sign in Modal\r\nexport function REQUEST_SIGNIN_MODAL() {\r\n  // use context\r\n  const context = React.useContext(REQUEST_SIGNIN_CONTEXT);\r\n\r\n  const [validated, setValidated] = React.useState(false);\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.info\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"Thank you!\");\r\n  const [trailingText, setTrailingText] = React.useState(\r\n    \"for registering with xcrossing lines, please procceed to signin\"\r\n  );\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // function\r\n  const handleSubmit = async (event) => {\r\n    //\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n\r\n    // sigin\r\n    await signin(context.payload);\r\n  };\r\n\r\n  // save to local storage\r\n  const saveToLocalStorage = (payload) =>\r\n    localStorage.setItem(\"xcrossinglines_tokens\", JSON.stringify(payload));\r\n\r\n  //setShowJobNotification\r\n  // login\r\n  const signin = async (payload) => {\r\n    // set notification\r\n    setNotification(NOTIFICATION_TYPE.loading, \"Signing In ...\", \"\");\r\n\r\n    // set url\r\n    const url = \"accounts/api/account/signin/\";\r\n    await api\r\n      .post(url, payload)\r\n      .then(async (r) => {\r\n        if (r.status === 200) {\r\n          // notify\r\n          setNotification(\r\n            NOTIFICATION_TYPE.success,\r\n            \"Awesome.\",\r\n            \"Signin success\"\r\n          );\r\n\r\n          //tokens\r\n          const xcrossinglines_tokens = {\r\n            access: r.data.access,\r\n            refresh: r.data.refresh,\r\n          };\r\n\r\n          // save to local storage\r\n          saveToLocalStorage(xcrossinglines_tokens);\r\n          // save\r\n          await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n          const [verify, _] = GET_VERIFIED_JWT_JOB();\r\n          if (verify) {\r\n            await AwaitCallBack(() =>\r\n              context.setShowJobNotification((_) => true)\r\n            );\r\n            return;\r\n          }\r\n          await AwaitCallBack(() => (window.location.href = ROUTE_LINKS.home));\r\n          return;\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        ErrorHandling(e, setNotification);\r\n      });\r\n  };\r\n\r\n  //return\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : () => {\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n            }\r\n      }\r\n      contentClassName=\"rounded-0\"\r\n    >\r\n      <Modal.Header\r\n        className=\"rounded-0 bg-white text-dark border-0\"\r\n        closeButton={true}\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>Continue Signin</Modal.Title>\r\n      </Modal.Header>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          {/*NOTIFICATION*/}\r\n          {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n          {/*NOTIFICATION*/}\r\n          {/*Email*/}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.FloatingLabel label=\"Email\">\r\n              <Form.Control\r\n                className=\"rounded-0 fw-bold\"\r\n                placeholder=\"xlines@example.co.za\"\r\n                disabled={disableUI}\r\n                required={true}\r\n                onChange={(value) => {}}\r\n                value={context.payload.email}\r\n                type=\"email\"\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please enter correct email address to continue\r\n              </Form.Control.Feedback>\r\n            </Form.FloatingLabel>\r\n          </Form.Group>\r\n          {/*Email*/}\r\n          {/*password*/}\r\n          <Form.Group className=\"my-3\">\r\n            <Form.FloatingLabel label=\"Password\">\r\n              <Form.Control\r\n                className=\"rounded-0 fw-bold\"\r\n                placeholder=\"Enter Password\"\r\n                value={context.payload.password}\r\n                onChange={(value) => {}}\r\n                disabled={disableUI}\r\n                required={true}\r\n                type=\"password\"\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please enter correct password to continue\r\n              </Form.Control.Feedback>\r\n            </Form.FloatingLabel>\r\n          </Form.Group>\r\n          {/*password*/}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"rounded-0 border-0\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outline-primary\"\r\n            className=\"rounded-0 border-0\"\r\n            style={{ fontWeight: \"800\" }}\r\n            disabled={disableUI}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n// Accept Terms and conditions modal\r\nexport function TERMS_AND_CONDITIONS() {\r\n  // customer phone numner\r\n  const phoneNumberRef = React.useRef();\r\n  const tsAndCsRef = React.useRef();\r\n  //\r\n  const context = React.useContext(REQUEST_GOOGLE_SIGNIN_CONTEXT);\r\n  //\r\n  const [termsAndConditionsColor, setTermsAndConditionsColor] =\r\n    React.useState(\"dark\");\r\n  const [validated, setValidated] = React.useState(false);\r\n\r\n  //handleVisibilityBorderColor\r\n  const handleVisibilityBorderColor = (form) => {\r\n    let termsAndConditionsColorChanged = false;\r\n    const list = form.querySelectorAll(\":invalid\");\r\n    //\r\n    for (let item of list) {\r\n      if (tsAndCsRef.current.id === item.id) {\r\n        termsAndConditionsColorChanged = true;\r\n        setTermsAndConditionsColor((_) => \"danger\");\r\n      }\r\n    }\r\n    // otherwise\r\n    if (!termsAndConditionsColorChanged)\r\n      setTermsAndConditionsColor((_) => \"success\");\r\n  };\r\n  //\r\n  const handleSubmit = async (event) => {\r\n    //\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      handleVisibilityBorderColor(form);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n\r\n    // once everything is cools\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setValidated(true);\r\n\r\n    // google\r\n    context.setShow((_) => false);\r\n    context.setCustomerPhonenumber(phoneNumberRef.current.value);\r\n    AwaitCallBack(() => {\r\n      // phoneNumberRef\r\n      setValidated((_) => false);\r\n      context.setShowGoogle();\r\n    }, 2000);\r\n  };\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0 border-0\"\r\n    >\r\n      <Modal.Header\r\n        closeButton={true}\r\n        className=\"rounded-0 bg-white border-0 text-dark pb-0\"\r\n        onHide={() => {\r\n          setValidated((_) => false);\r\n          context.setShow((_) => false);\r\n          setTermsAndConditionsColor((_) => \"dark\");\r\n        }}\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          <span className=\"text-danger\">Google</span> Signin\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          {/* Customer phone number  */}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.FloatingLabel\r\n              label=\"Phone number\"\r\n              className=\"fw-bold\"\r\n              style={{ color: \"grey\" }}\r\n            >\r\n              <Form.Control\r\n                className=\"fw-bold rounded-0\"\r\n                placeholder=\"084 000 0000\"\r\n                ref={phoneNumberRef}\r\n                required={true}\r\n                maxLength={10}\r\n                minLength={10}\r\n                type=\"tel\"\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please enter correct phone number to continue\r\n              </Form.Control.Feedback>\r\n              <Form.Control.Feedback>Awesome</Form.Control.Feedback>\r\n            </Form.FloatingLabel>\r\n          </Form.Group>\r\n          {/* Customer phone number  */}\r\n          {/*Accept Our Terms and Conditions*/}\r\n          <Form.Group>\r\n            <Form.Check\r\n              required={true}\r\n              type=\"checkbox\"\r\n              id=\"terms-and-conditions\"\r\n            >\r\n              <Form.Check.Input\r\n                id=\"GoogleTermsAndConditions\"\r\n                type=\"checkbox\"\r\n                required={true}\r\n                ref={tsAndCsRef}\r\n                onChange={(e) => {\r\n                  if (validated && e.target.checked)\r\n                    setTermsAndConditionsColor((_) => \"success\");\r\n                  else if (validated && !e.target.checked)\r\n                    setTermsAndConditionsColor((_) => \"danger\");\r\n                }}\r\n              />\r\n              <Form.Check.Label>\r\n                Accept our{\" \"}\r\n                <a\r\n                  href={TermsAndConditions}\r\n                  className={`text-${termsAndConditionsColor} fw-bold`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  terms\r\n                </a>{\" \"}\r\n                and{\" \"}\r\n                <a\r\n                  className={`text-${termsAndConditionsColor} fw-bold`}\r\n                  href={TermsAndConditions}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  conditions\r\n                </a>\r\n              </Form.Check.Label>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please accept our terms and conditions to continue with Google\r\n                Sign In\r\n              </Form.Control.Feedback>\r\n            </Form.Check>\r\n          </Form.Group>\r\n          {/*Accept Our Terms and Conditions*/}\r\n          {/*button*/}\r\n          <div className=\"w-100 d-flex justify-content-end align-items-center my-2\">\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              className=\"rounded-0 fw-bold border-0 align-end\"\r\n              type=\"submit\"\r\n            >\r\n              Proceed\r\n            </Button>\r\n          </div>\r\n          {/*button*/}\r\n        </Modal.Body>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","// widgets\r\nimport React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\n// utils\r\nimport { JOB_NOTIFICATION_CONTEXT } from \"../utils/contexts\";\r\nimport { NOTIFICATION_TYPE, ROUTE_LINKS } from \"../utils/strings\";\r\nimport { NOTIFICATIONS } from \"../utils/notifications\";\r\nimport { GET_JWT_JOB } from \"../utils/jwt-encode-job\";\r\nimport api from \"../utils/api\";\r\nimport { JOB_INVOICE_SLIP } from \"../sub-components/quote-invoice-slip\";\r\nimport { IS_LOGGED_IN } from \"../utils/loggedin\";\r\nimport { ErrorHandling } from \"../utils/error-handling\";\r\nimport { AwaitCallBack } from \"../utils/await-callback\";\r\n\r\n// icons\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { DATE_FORMATER, TIME_FORMATER } from \"../utils/formats\";\r\n\r\n// export\r\nexport function JOB_NOTIFICATION_MODAL() {\r\n  // fetch context\r\n  const context = React.useContext(JOB_NOTIFICATION_CONTEXT);\r\n  // reference to the modal header\r\n  const modalRef = React.useRef();\r\n  // hooks\r\n  const [disableUI, setDisableUI] = React.useState(false);\r\n  const [job, setJob] = React.useState({});\r\n  const [quote, setQuote] = React.useState({\r\n    mid_discount: 0,\r\n    referal_discount: 0,\r\n    base_fee: 0,\r\n    amount_due: 0,\r\n  });\r\n  const [quoteLoaded, setQuoteLoaded] = React.useState(false);\r\n  const [notificationType, setNotificationType] = React.useState(\r\n    NOTIFICATION_TYPE.warning\r\n  );\r\n  const [leadingText, setLeadingText] = React.useState(\"\");\r\n  const [trailingText, setTrailingText] = React.useState(\"\");\r\n\r\n  // notification function\r\n  const setNotification = (type, leading, trailing) => {\r\n    setNotificationType((_) => type);\r\n    setLeadingText((_) => leading);\r\n    setTrailingText((_) => trailing);\r\n\r\n    // disable\r\n    const disable =\r\n      type === NOTIFICATION_TYPE.loading || type === NOTIFICATION_TYPE.success;\r\n    setDisableUI((_) => disable);\r\n  };\r\n\r\n  // generate Quote\r\n  const generateQuote = React.useCallback(async () => {\r\n    // try retrieve job\r\n    const [verify, payload] = GET_JWT_JOB();\r\n    // verify if booking exists\r\n    if (verify) {\r\n      // set the payload to job\r\n      setJob(() => payload);\r\n      // set notification loading\r\n      setQuoteLoaded((_) => false);\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Loading ...\", \"\");\r\n\r\n      // url\r\n      const url = \"jobs/api/job/generate-quote/\";\r\n      await api\r\n        .post(url, payload)\r\n        .then((r) => {\r\n          // check status\r\n          if (r.status === 200) {\r\n            // set notification loading\r\n            setQuoteLoaded((_) => true);\r\n            setQuote((_) => r.data);\r\n            // resend the message\r\n            setNotification(\r\n              NOTIFICATION_TYPE.warning,\r\n              \"Dear valued customer. \",\r\n              \"We have detected an existing job that's uncomplete, click the BOOK button to complete.\"\r\n            );\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setQuoteLoaded((_) => true);\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n    }\r\n    return;\r\n  }, []);\r\n\r\n  // createJob\r\n  const createJob = async (payload) => {\r\n    // check if you are logged in\r\n    const [verify, tokens] = IS_LOGGED_IN();\r\n\r\n    // check verification\r\n    if (verify) {\r\n      //loading\r\n      setNotification(NOTIFICATION_TYPE.loading, \"Creating Job ...\", \"\");\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${tokens.access}`,\r\n        },\r\n      };\r\n      // const set url\r\n      const url = \"jobs/api/job/create/\";\r\n      await api\r\n        .post(url, payload, config)\r\n        .then(async (r) => {\r\n          //\r\n          if (r.status === 200) {\r\n            const msg = \"Job successfully created\";\r\n            setNotification(NOTIFICATION_TYPE.success, \"Awesome. \", msg);\r\n            // remove the job\r\n            localStorage.removeItem(\"create-job\");\r\n            // sleep\r\n            await AwaitCallBack(() => context.setShow((_) => false), 2000);\r\n            await AwaitCallBack(\r\n              () => (window.location.href = ROUTE_LINKS.jobs)\r\n            );\r\n            return;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          ErrorHandling(e, setNotification);\r\n        });\r\n      return;\r\n    }\r\n\r\n    // otherwise\r\n    setDisableUI((_) => true);\r\n    const message =\r\n      \"to complete your Job kindly please sign-in, a popup will show to confirm your job.\";\r\n    setNotification(\r\n      NOTIFICATION_TYPE.info,\r\n      \"Dear valued customer. \",\r\n      `${message}`\r\n    );\r\n\r\n    // sleep 3 seconds\r\n    await AwaitCallBack(\r\n      () => (window.location.href = ROUTE_LINKS.signin),\r\n      3000\r\n    );\r\n    return;\r\n  };\r\n\r\n  // ui item\r\n  const InvoiceItem = ({ leading, trailing }) => {\r\n    //\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-start align-items-center\">\r\n        <span className=\"fw-bold text-dark me-2\">{leading}:</span>\r\n        <span className=\"fw-normal text-dark\">{trailing}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DriverNoteItem = ({ leading, trailing }) => {\r\n    //\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-start align-items-start\">\r\n        <span className=\"text-dark fw-bold me-2\">{leading}:</span>\r\n        <span className=\"fw-normal text-dark\">{trailing}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //\r\n  const quoteGeneratedSuccessfully = (isGenerated, gJob, quote) => {\r\n    // check if generated\r\n    if (isGenerated) {\r\n      return (\r\n        <div>\r\n          <div className=\"d-flex flex-column px-3 mb-3\">\r\n            <InvoiceItem\r\n              leading={\"Job date\"}\r\n              trailing={`${DATE_FORMATER.format(new Date(gJob.job_date))}`}\r\n            />\r\n            <InvoiceItem\r\n              leading={\"Job time\"}\r\n              trailing={`${TIME_FORMATER.format(\r\n                new Date(`${gJob.job_date} ${gJob.job_time} `)\r\n              )}`}\r\n            />\r\n            <InvoiceItem\r\n              leading={\"Payment option\"}\r\n              trailing={`${\r\n                `${gJob.payment_option}`.toUpperCase().charAt(0) +\r\n                `${gJob.payment_option}`.slice(1).toLowerCase()\r\n              }`}\r\n            />\r\n            <DriverNoteItem\r\n              leading={\"Driver Note\"}\r\n              trailing={`${gJob.driver_note}`}\r\n            />\r\n          </div>\r\n          {/*Table*/}\r\n          <div className=\"px-3\">\r\n            <table\r\n              className={`table table-success table-striped table-bordered`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Distance</td>\r\n                  <td>{`${gJob.distance} km`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Vehicle size</td>\r\n                  <td>{`${gJob.vehicle_size} ton`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Helpers</td>\r\n                  <td>{`${gJob.helpers}`}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Floors</td>\r\n                  <td>{`${gJob.floors}`}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {/*Table*/}\r\n          <div className=\"mt-2\">\r\n            <JOB_INVOICE_SLIP job={quote} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // React.useEffect()\r\n  React.useEffect(() => {\r\n    if (context.show) {\r\n      generateQuote();\r\n    }\r\n  }, [generateQuote, context.show]);\r\n  //\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      show={context.show}\r\n      contentClassName=\"rounded-0\"\r\n      onHide={\r\n        disableUI\r\n          ? null\r\n          : async () => {\r\n              setNotification(NOTIFICATION_TYPE.none, \"\", \"\");\r\n              context.setShow((_) => false);\r\n              await AwaitCallBack(\r\n                () => (window.location.href = ROUTE_LINKS.home),\r\n                2000\r\n              );\r\n            }\r\n      }\r\n    >\r\n      <Modal.Header\r\n        ref={modalRef}\r\n        closeButton={true}\r\n        className=\"rounded-0 bg-white text-dark pb-0 border-0\"\r\n      >\r\n        <Modal.Title style={{ fontWeight: \"900\" }}>\r\n          Job notification\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body className=\"px-0\">\r\n        {/*NOTIFICATIONS*/}\r\n        <div className=\"mb-3 px-3\">\r\n          {NOTIFICATIONS(notificationType, leadingText, trailingText)}\r\n        </div>\r\n        {/*NOTIFICATIONS*/}\r\n        {/*Quote*/}\r\n        {quoteGeneratedSuccessfully(quoteLoaded, job, quote)}\r\n        {/*Quote*/}\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"bg-white border-0\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          className=\"rounded-0 border-0 fw-bold d-flex flex-row justify-content-center align-items-center gap-2\"\r\n          disabled={disableUI}\r\n          onClick={() => createJob(job)}\r\n        >\r\n          Book\r\n          <FaCheck />\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Divider() {\r\n  return (\r\n    <hr\r\n      className=\"p-0 my-2 border-0\"\r\n      color=\"#c9c9c9\"\r\n      style={{\r\n        height: \"2px\",\r\n        width: \"100%\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, OverlayTrigger, Popover } from \"react-bootstrap\";\r\n\r\nimport { BsInfoCircle as InfoIcon } from \"react-icons/bs\";\r\n// import { FaInfoCircle as InfoIcon } from \"react-icons/fa\";\r\n\r\nimport {\r\n  AMOUNT_DUE,\r\n  BASE_AMOUNT,\r\n  EXTRA_DISCOUNT,\r\n  OFFPEAK,\r\n  PRICE_ADJUSTMENT,\r\n  RETURN_CUSTOMER,\r\n} from \"../utils/strings\";\r\nimport { AnimatedButton } from \"./animated-button\";\r\n\r\n// export export\r\nexport function JOB_INVOICE_SLIP({ job, padding = \"p-3\" }) {\r\n  // format\r\n  const formater = Intl.NumberFormat(\"en-ZA\", {\r\n    style: \"currency\",\r\n    currency: \"zar\",\r\n    minimumSignificantDigits: 1,\r\n  });\r\n\r\n  //const popover\r\n  const popover = (body) => {\r\n    return (\r\n      <Popover\r\n        id=\"popover-basic\"\r\n        className=\"rounded-0 border-secondary\"\r\n        arrowProps={{ style: { backgroundColor: \"red\" } }}\r\n      >\r\n        <Popover.Body className=\"text-secondary fw-bold rounded-0\">\r\n          {body}\r\n        </Popover.Body>\r\n      </Popover>\r\n    );\r\n  };\r\n\r\n  //\r\n  return (\r\n    <Card className=\"dropdown__shadow rounded-0 border-0\">\r\n      <Card.Body className={`${padding}`}>\r\n        {/*table*/}\r\n        <table className={`table table-bordered table-striped table-dark m-0`}>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Price(ZAR)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Base fee</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${BASE_AMOUNT}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>{`${formater.format(job.base_fee)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Off peak</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${OFFPEAK}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.mid_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.mid_discount)}`}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span>Return customer</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${RETURN_CUSTOMER}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-danger fw-bolder\">{`${\r\n                job.return_customer_discount > 0 ? \"-\" : \"\"\r\n              } ${formater.format(job.return_customer_discount)}`}</td>\r\n            </tr>\r\n            {/*extra discount*/}\r\n            {job.give_extra_discount ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <span>Extra discount</span>\r\n                    <AnimatedButton className=\"px-1\">\r\n                      <OverlayTrigger\r\n                        trigger=\"click\"\r\n                        placement=\"top\"\r\n                        rootClose={true}\r\n                        overlay={popover(`${EXTRA_DISCOUNT}`)}\r\n                      >\r\n                        <div>\r\n                          <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                        </div>\r\n                      </OverlayTrigger>\r\n                    </AnimatedButton>\r\n                  </div>\r\n                </td>\r\n                <td className=\"text-danger\">{`${\r\n                  job.give_extra_discount ? \"-\" : \"\"\r\n                } ${formater.format(job.extra_discount)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n            {job.set_price_adjustment ? (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <div className=\"d-flex flex-row\">\r\n                      <span>Price adjustment</span>\r\n                      <AnimatedButton className=\"px-1\">\r\n                        <OverlayTrigger\r\n                          trigger=\"click\"\r\n                          placement=\"top\"\r\n                          rootClose={true}\r\n                          overlay={popover(`${PRICE_ADJUSTMENT}`)}\r\n                        >\r\n                          <div>\r\n                            <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                      </AnimatedButton>\r\n                    </div>\r\n                    <span className=\"text-muted form-text fw-bold border border-2 px-1 bg-light\">\r\n                      Price adjustment justification:{\" \"}\r\n                      <span className=\"text-dark\">\r\n                        {job.price_adjustment_justification}\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>{`${formater.format(job.price_adjustment)}`}</td>\r\n              </tr>\r\n            ) : null}\r\n            {/*price adjustment*/}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td>\r\n                <div className=\"d-flex flex-row\">\r\n                  <span style={{ fontWeight: \"900\" }}>Amount due</span>\r\n                  <AnimatedButton className=\"px-1\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"top\"\r\n                      rootClose={true}\r\n                      overlay={popover(`${AMOUNT_DUE}`)}\r\n                    >\r\n                      <div>\r\n                        <InfoIcon role=\"button\" className=\"text-primary\" />\r\n                      </div>\r\n                    </OverlayTrigger>\r\n                  </AnimatedButton>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"900\",\r\n                    fontSize: `${20 / 16}rem`,\r\n                  }}\r\n                >\r\n                  {formater.format(job.amount_due).replace(\"ZA\", \"\")}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        {/*table*/}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// create context\r\nexport const REQUEST_SIGNIN_CONTEXT = React.createContext();\r\nexport const REQUEST_GOOGLE_SIGNIN_CONTEXT = React.createContext();\r\nexport const CREATE_JOB_CONTEXT = React.createContext();\r\nexport const UPDATE_JOB_CONTEXT = React.createContext();\r\nexport const COMPLETE_JOB_CONTEXT = React.createContext();\r\nexport const JOB_NOTIFICATION_CONTEXT = React.createContext();\r\n","export const STATUS = {\r\n  100: \"Continue\",\r\n  101: \"Switching protocols\",\r\n  102: \"Processing\",\r\n  103: \"Early hints\",\r\n  200: \"Ok\",\r\n  201: \"Created\",\r\n  202: \"Accepted\",\r\n  203: \"Non authoritative information\",\r\n  204: \"No content\",\r\n  205: \"Reset content\",\r\n  206: \"Partial content\",\r\n  207: \"Multi status\",\r\n  208: \"Already reported\",\r\n  226: \"Im used\",\r\n  300: \"Multiple choices\",\r\n  301: \"Moved permanently\",\r\n  302: \"Found\",\r\n  303: \"See other\",\r\n  304: \"Not modified\",\r\n  305: \"Use proxy\",\r\n  306: \"Reserved\",\r\n  307: \"Temporary redirect\",\r\n  308: \"Permanent redirect\",\r\n  400: \"Bad request\",\r\n  401: \"Unauthorized\",\r\n  402: \"Payment required\",\r\n  403: \"Forbidden\",\r\n  404: \"Not found\",\r\n  405: \"Method_not_allowed\",\r\n  406: \"Not acceptable\",\r\n  407: \"Proxy authentication required\",\r\n  408: \"Request timeout\",\r\n  409: \"Conflict\",\r\n  410: \"Gone\",\r\n  411: \"Length required\",\r\n  412: \"Precondition failed\",\r\n  413: \"Request entity too large\",\r\n  414: \"Request uri too long\",\r\n  415: \"Unsupported media type\",\r\n  416: \"Requested range not satisfiable\",\r\n  417: \"Expectation failed\",\r\n  418: \"Im a teapot\",\r\n  421: \"Misdirected_request\",\r\n  422: \"Unprocessable entity\",\r\n  423: \"Locked\",\r\n  424: \"Failed dependency\",\r\n  425: \"Too early\",\r\n  426: \"Upgrade required\",\r\n  428: \"Precondition required\",\r\n  429: \"Too many requests\",\r\n  431: \"Request header fields too large\",\r\n  451: \"Unavailable for legal reasons\",\r\n};\r\n","import { STATUS } from \"./status\";\r\nimport { NOTIFICATION_TYPE } from \"./strings\";\r\n\r\nexport function ErrorHandling(e, setNotification) {\r\n  // set\r\n  if (e.response) {\r\n    let msg;\r\n    const statuscode = e.response.status;\r\n    if (statuscode >= 500) {\r\n      // ... handle internal server errors\r\n      msg = \"Internal server error. Contact admin\";\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n      return;\r\n    } else if (e.response.data.detail) {\r\n      // handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.detail}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.msg) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.msg}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else if (e.response.data.email) {\r\n      // ... handle 400 range errors with msg\r\n      msg = `${STATUS[statuscode]}, ${e.response.data.email}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    } else {\r\n      // ... handle 400 range errors without msg\r\n      msg = `${STATUS[statuscode]}`;\r\n      setNotification(NOTIFICATION_TYPE.error, \"Oops!\", msg);\r\n    }\r\n  } else if (e.request) {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.request);\r\n  } else {\r\n    setNotification(NOTIFICATION_TYPE.error, \"Oops!\", e.message);\r\n  }\r\n}\r\n","// formaters\r\nexport const DATE_FORMATER = Intl.DateTimeFormat(\"en-ZA\", {\r\n  weekdays: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n});\r\n\r\n// time formater\r\nexport const TIME_FORMATER = Intl.DateTimeFormat(\"en-Za\", {\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  // second: \"numeric\",\r\n  timeZone: \"Africa/Harare\",\r\n  timeZoneName: \"short\",\r\n});\r\n\r\nexport const CURRENCY_FORMATER = Intl.NumberFormat(\"en-ZA\", {\r\n  style: \"currency\",\r\n  currency: \"zar\",\r\n  minimumSignificantDigits: 1,\r\n});\r\n","import jwt_encode from \"jwt-encode\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// encode\r\nexport function ENCODE_CREATE_JOB_JWT(data) {\r\n  // const\r\n  const secretKey = \"xcrossinglines\";\r\n  const jwt = jwt_encode(data, secretKey);\r\n\r\n  // save the jwt locally\r\n  localStorage.setItem(\"create-job\", JSON.stringify(jwt));\r\n}\r\n\r\n//\r\n// check if jwt_encoded version exists\r\nexport function GET_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      // then return with\r\n      const decodedPayload = jwt_decode(createJob);\r\n      return [true, decodedPayload];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n\r\n//\r\n//\r\nexport function RETRIEVE_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      return [true, createJob];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n\r\n// get complete jwt job\r\nexport function GET_VERIFIED_JWT_JOB() {\r\n  //\r\n  try {\r\n    // find\r\n    const createJob = JSON.parse(localStorage.getItem(\"create-job\"));\r\n    if (createJob) {\r\n      // then return with\r\n      const decodedPayload = jwt_decode(createJob);\r\n      // verify\r\n      if (\r\n        decodedPayload.vehicle_size &&\r\n        decodedPayload.distance &&\r\n        decodedPayload.helpers\r\n      ) {\r\n        //\r\n        return [true, decodedPayload];\r\n      }\r\n      return [false, {}];\r\n    }\r\n    // this means wasnt successful\r\n    return [false, {}];\r\n  } catch (error) {\r\n    return [false, {}];\r\n  }\r\n}\r\n"],"names":["REQUEST_SIGNIN_MODAL","context","React","REQUEST_SIGNIN_CONTEXT","validated","setValidated","disableUI","setDisableUI","notificationType","setNotificationType","NOTIFICATION_TYPE","leadingText","setLeadingText","trailingText","setTrailingText","setNotification","type","leading","trailing","_","disable","signin","async","api","payload","then","r","status","localStorage","setItem","JSON","stringify","saveToLocalStorage","access","data","refresh","AwaitCallBack","setShow","verify","GET_VERIFIED_JWT_JOB","setShowJobNotification","window","location","href","ROUTE_LINKS","catch","e","ErrorHandling","_jsxs","Modal","centered","show","onHide","contentClassName","children","_jsx","className","closeButton","style","fontWeight","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","NOTIFICATIONS","label","placeholder","disabled","required","onChange","value","email","password","Button","variant","TERMS_AND_CONDITIONS","phoneNumberRef","tsAndCsRef","REQUEST_GOOGLE_SIGNIN_CONTEXT","termsAndConditionsColor","setTermsAndConditionsColor","form","termsAndConditionsColorChanged","list","querySelectorAll","item","current","id","handleVisibilityBorderColor","setCustomerPhonenumber","setShowGoogle","color","ref","maxLength","minLength","target","checked","TermsAndConditions","concat","rel","JOB_NOTIFICATION_MODAL","JOB_NOTIFICATION_CONTEXT","modalRef","job","setJob","quote","setQuote","mid_discount","referal_discount","base_fee","amount_due","quoteLoaded","setQuoteLoaded","generateQuote","GET_JWT_JOB","url","InvoiceItem","_ref","DriverNoteItem","_ref2","quoteGeneratedSuccessfully","isGenerated","gJob","DATE_FORMATER","Date","job_date","TIME_FORMATER","job_time","payment_option","toUpperCase","charAt","slice","toLowerCase","driver_note","scope","distance","vehicle_size","helpers","floors","JOB_INVOICE_SLIP","onClick","tokens","IS_LOGGED_IN","config","headers","Authorization","msg","removeItem","createJob","FaCheck","Divider","height","width","padding","formater","Intl","NumberFormat","currency","minimumSignificantDigits","popover","body","Popover","arrowProps","backgroundColor","Card","AnimatedButton","OverlayTrigger","trigger","placement","rootClose","overlay","BASE_AMOUNT","InfoIcon","role","format","OFFPEAK","RETURN_CUSTOMER","return_customer_discount","give_extra_discount","EXTRA_DISCOUNT","extra_discount","set_price_adjustment","PRICE_ADJUSTMENT","price_adjustment_justification","price_adjustment","AMOUNT_DUE","fontSize","replace","CREATE_JOB_CONTEXT","UPDATE_JOB_CONTEXT","COMPLETE_JOB_CONTEXT","STATUS","response","statuscode","detail","request","message","DateTimeFormat","weekdays","year","month","day","hour","minute","timeZone","timeZoneName","ENCODE_CREATE_JOB_JWT","jwt","jwt_encode","parse","getItem","jwt_decode","error","decodedPayload"],"sourceRoot":""}